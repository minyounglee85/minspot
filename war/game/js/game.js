enchant();

// enchant 문서 
// http://wise9.github.io/enchant.js/doc/core/ja/

/*
 * game 객체: Game 객체는 게임 전체를 관리하고 운영 시스템, 
 * 즉 게임의 기본적인 기능을 제공합니다. 
 * 모든 게임은 Game 개체를 중심으로 작동합니다. 
 * 각 Game 개체는 기본적으로 하나의 Scene 객체가 rootScene라는 이름으로 지정됩니다. 
 * 또한 하나의 Web 페이지에 여러 게임을 만들 수 있습니다 만, 그 경우는 Game 객체도 게임의 수만큼 존재하게됩니다.
 */

/*
 * Scene 객체: Scene 객체는 한묶음이 시각 요소입니다. 
 * 게임에서 사용하는 표시 요소의 대부분을 차지하고있는 Node 객체를 묶을 수 있습니다. 
 * 예를 들어, 시작 화면이 게임에서는 게임 시작 화면 Scene 객체 또는 재생 화면의 Scene 객체가 될 수 있습니다.
 * 게임은 하나의 Scene 객체로 구성 할 수도 있고, 여러 Scene 객체로 구성 할 수 있습니다. 
 * 간단한 게임이라면 rootScene에 요소를 추가하거나 지우거나 해 나가기로에서 화면 전환을 할 수 있습니다.
 * 또한 Scene 객체 계층에 겹칠 수 있습니다 (스택 관리됩니다). 
 * 예를 들어, 슈팅 게임처럼 게임 화면 중에 점수 표시가있는 게임 등에서는 실제 플레이 화면의 Scene 객체에 점수 표시 Scene 객체를 거듭하는 사용법이 있습니다.
 */

/*
 * Node 객체
 * Node 객체는 게임을 구성하는 시각적 요소입니다. 
 * 실제로 Node 객체를 상속 한 객체를 사용합니다 (이하 Node 계 오브젝트합니다). 
 * Node 계 객체에는 다음과 같은 것들이 있습니다.
 * Sprite 객체 : 그림이나 이미지를 표시하는 객체
 * Label 객체 : 문자를 표시하는 객체
 * Map 객체 : 게임지도보기 개체
 */

/*
 * 초기화 과정 
 * 1.enchant.js 초기화 
 * 2.Game 객체 생성 
 * 3.Game 객체의 초기 설정 
 * 4.소재의 미리 설정 
 * 5.작동 초기시의 게임 코드 세트 
 * 6.게임의 동작 개시 
 * 7.게임의 동작 사전로드 완료 대기 
 * 8.작동 초기시의 게임 코드의 실행
 */

/*
 * 상태 전환 및 이벤트 처리 
 * ENTER_FRAME : 프레임 시작할 때 발생합니다 
 * A_BUTTON_DOWN : A 버튼을 눌렀을 때 발생합니다
 * B_BUTTON_DOWN : B 버튼을 누를 때 발생합니다 
 * DOWN_BUTTON_DOWN 방향키 ↓ 버튼을 누를 때 발생합니다
 * LEFT_BUTTON_DOWN 방향키 ← 버튼을 누를 때 발생합니다 
 * RIGHT_BUTTON_DOWN 커서 키 → 버튼을 누를 때 발생합니다
 * UP_BUTTON_DOWN 방향키 ↑ 단추를 누를 때 발생합니다
 * 
 * abuttondown touchstart
 */

/*
 * 사운드 재생 
 * game.preload('jump.wav'); game.onload = function() {
 * game.assets['jump.wav'].play(); };
 */

window.onload = function() {
    var game = new Game(320, 320); // game 객체 생성
    game.fps = 24;
    game.keybind (32, 'a');
    game.preload('img/ez.png', 'img/map2.png', 'img/chara6.png', 'img/chara5.png', 'img/defeat.png',
    		     'img/chara7.png', 'img/map1.png', 'img/chara0.png', 'img/complete1.gif',
    		     'img/blueminion.png', 'img/blueslime.png', 'img/redminion.png', 'img/open.jpg',
    		     'sound/punch1.wav', 'sound/dqfinish.mp3', 'sound/dqlevelup.mp3', 'sound/buttonpush.wav', 'sound/toggle.wav',
    		     'sound/dqtitle.mp3', 'sound/ff1town.mp3', 'sound/ff1battle.mp3', 'sound/ff1dungeon.mp3', 'sound/ffover.mp3'
    		     );
    game.onload = function() {
    	
        // 오프닝 시작
        var opening = new Scene();         
        
        bg = new Sprite(320,320);
        bg.image = game.assets['img/open.jpg'];
        
        var openingMessage = new Label ("- Press Space or Touch Screen -");
        openingMessage.y = 220;    
        openingMessage.textAlign = 'center';
        openingMessage.color = 'white';
        
        openingMessage.on ('enterframe', function() {
        openingMessage.tl.fadeTo(1, 15)
                         .fadeTo(0, 15)
        	             .loop();
        });
        
        var openingBox = new Sprite(320, 100);
        openingBox.backgroundColor = 'black';
        openingBox.moveTo (0, 10);
        openingBox.opacity = 0.5;

        var openingTitle = new Label ("League of Legend: Explorer Ezreal<br>fan Game by minyoung");
        openingTitle.y = 32;
        openingTitle.font = '18px strong';
        openingTitle.color = 'white';
        openingTitle.textAlign = 'center';
        
        opening.addChild (bg);
        opening.addChild (openingBox);
        opening.addChild (openingMessage);
        opening.addChild (openingTitle);
        
        game.pushScene(opening);
        game.assets['sound/dqtitle.mp3'].play();
        // popScene으로 opening씬 죽이고 replaceScene으로 openingEz씬 시작.
        // 타이틀 음악 죽이고 필드 음악 시작.
        opening.addEventListener ('abuttondown', function () {         
            game.assets ['sound/ff1town.mp3'].play();
            game.assets ['sound/ff1town.mp3'].src.loop = true; 
            game.assets['sound/dqtitle.mp3'].stop(); 
            game.assets['sound/buttonpush.wav'].play();
            game.popScene(opening); 
            game.replaceScene(openingEz); 
        });
        opening.addEventListener ('touchstart', function () {         
            game.assets ['sound/ff1town.mp3'].play();
            game.assets ['sound/ff1town.mp3'].src.loop = true; 
            game.assets['sound/dqtitle.mp3'].stop(); 
            game.assets['sound/buttonpush.wav'].play();
            game.popScene(opening);
            game.replaceScene(openingEz);
        });
        // 오프닝 끝
        
        // 게임화면 오프닝 대사 시작
        var openingEz = new Scene(); 
        var speechMsg = new Label ("[Ezreal]<br>I can be really famous if I find treasure.<br>According to the rumor, <br>There are some very interesting treasure<br>in Shurima underground tomb");
        var speechBox = new Sprite(300, 100);
        speechBox.backgroundColor = 'black';
        speechBox.moveTo (10, 210);
        speechBox.opacity = 0.5;
        speechMsg.x = 15;   
        speechMsg.y = 220;
        speechMsg.color = 'white';
        openingEz.addChild (speechBox);
        openingEz.addChild (speechMsg);
        
        // 게임 음악 시작, 버튼 소리, 씬 죽이기.
        openingEz.addEventListener ('abuttondown', function () { game.assets['sound/buttonpush.wav'].play(); game.popScene(); }); // 씬
																																	// 죽이기.
        openingEz.addEventListener ('touchstart', function () { game.assets['sound/buttonpush.wav'].play(); game.popScene(); });
        // 게임화면 오프닝 대사 끝
        
        // 인물 대사 창 함수
	    var speech = function (someth) {
	    	 speechBox.opacity = 0.7;
		     speechMsg.moveTo (veiwX + 20, veiwY + 20);
		     speechBox.moveTo (veiwX + 10, veiwY + 10);
		     speechMsg.text = someth;
		    };

	    var speechend = function () {
	    	 speechBox.opacity = 0;
	    	 speechMsg.text = '';
		    };
		// 인물 대화 창 끝
        
        // 맵 시작
    	var map = new Map(16, 16);
    	
    	// map.image = game.assets['img/map1.png'];
    	map.image = game.assets['img/complete1.gif'];
		
    	/*
		 * 지역 코드 슈리마 월드맵 = 100 슈리마 마을 = 101 슈리마 마을 지하 = 102 타곤산 1층 = 200
		 */
    	
    	// 맴설정 시작 40*40
    	// 슈리마 월드 (최초 기본 맵)
    	var locationCode = 100;
    	var mainLoadData = [
    	                    [1148,1148,1496,1235,1323,1324,1324,1324,1324,1325,1237,1498,1496,1235,1235,1496,1584,1324,1324,1585,1324,1324,1585,1324,5456,1324,1855,1855,1585,1585,1585,1585,1585,1585,1585,1585,1585,1585,1585,1585],
    	                    [2465,1148,1496,1323,1324,1324,1324,1324,1324,5456,1325,1498,1496,1235,1235,1584,1324,1324,1324,1324,1585,1324,1324,4752,1585,1324,1855,1855,1585,1585,1585,5457,1585,1585,1585,1585,1585,4577,1585,1585],
    	                    [1148,1148,1584,1585,1585,1585,1585,1324,1585,1679,1585,1586,1496,1235,1323,1324,1324,1585,1324,1324,1324,1324,1324,1585,1324,5456,1855,1855,1585,1585,1585,1585,1585,1585,5457,4752,1585,1585,1585,1585],
    	                    [1148,1148,1148,1148,1148,2465,1236,1324,1585,1767,1585,1497,1496,1323,1324,1585,1324,5456,1585,1324,1324,1324,1324,1324,1324,5456,1855,1855,1585,1585,4752,1585,1585,1585,1585,1585,1585,1585,1585,1585],
    	                    [1148,1148,2465,1148,1148,1236,1325,3188,944,945,946,1496,1584,1585,1585,1585,1585,1585,1585,1585,4752,1585,1585,1585,1585,1585,1855,1855,1585,1585,1585,1585,1585,1585,1585,1585,1585,4752,1585,1585],
    	                    [1585,1585,1585,1585,1585,1586,3169,3169,944,945,946,1584,1585,1585,1585,1585,1585,1585,1585,1585,1585,1585,1585,1585,1585,1585,1855,1855,1585,1585,1585,1585,1585,1585,1585,1585,1585,1585,1585,1585],
    	                    [3169,3169,3169,697,697,3169,3169,3169,944,945,946,3169,3169,697,697,3172,3172,3169,3169,3169,3169,3169,3169,3169,3169,3169,944,946,3188,3169,3169,3169,3169,3169,3169,3169,697,697,3169,3169],
    	                    [3169,3169,3169,788,788,3169,3169,3169,944,945,946,3169,3169,788,788,3172,3172,3169,3169,3169,3169,3169,3169,3169,3169,3169,944,946,3169,3169,3169,3169,3169,3169,3169,3169,698,698,3169,3169],
    	                    [3169,3169,3169,3169,3169,3169,3169,3169,944,945,946,3169,3169,3172,3172,3172,3172,3169,3169,3169,3169,2466,3169,3169,3169,3169,944,946,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,697],
    	                    [3169,3169,3169,3169,3169,3169,2466,3169,944,945,946,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,944,946,3169,3169,3169,3169,3169,3169,1392,1393,1918,3169,3169,698],
    	                    [3169,3169,3169,3169,3169,3169,3169,3169,944,945,946,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,944,946,3169,3169,3169,3169,3172,3169,1480,1481,698,3169,3169,3170],
    	                    [3169,3169,3169,3169,2466,3169,3169,3169,944,945,946,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,944,946,3169,3169,3169,3169,3169,3169,3169,3169,697,1392,1393,3170],
    	                    [3169,3169,3169,3169,3169,3169,3169,3169,944,945,946,3169,3169,3169,3169,3169,3169,3169,3169,1763,1764,3169,3169,3169,3169,3169,944,946,3169,3169,3169,3169,3169,3169,3169,610,698,1480,1481,3169],
    	                    [3169,3169,3169,3169,3169,3169,3169,3169,944,945,946,3169,2466,3169,3169,3169,3169,3169,3169,1851,1852,3169,3169,3169,3169,3169,944,945,857,857,857,857,857,857,857,857,857,857,857,857],
    	                    [3169,3169,3169,3169,3169,3169,3169,3169,944,945,946,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,944,945,1033,1033,1033,1033,1033,1033,1033,1033,1033,1033,1033,1033],
    	                    [3169,3169,3169,3169,3169,3169,3169,3169,944,945,946,3169,3169,3169,2466,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,944,946,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3170],
    	                    [3169,3169,3169,3169,3169,3169,3169,3169,944,945,946,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,2466,3169,944,946,3169,3169,3169,3169,3169,3169,3169,3169,1392,1393,1918,697],
    	                    [3169,3169,610,3169,3169,3169,3169,3169,944,945,946,3169,3169,3169,3169,3169,3169,3169,610,3169,3169,3169,3169,3169,3169,3169,944,946,3169,3169,3169,3169,2466,3169,3169,3169,1480,1481,698,698],
    	                    [857,857,857,857,857,857,857,857,945,945,945,857,857,857,857,857,857,857,857,857,857,857,857,857,857,857,945,946,3169,3169,3169,3169,3169,3169,1392,1393,3169,3169,1918,3170],
    	                    [1033,1033,1033,1033,1033,1033,1033,1033,1033,1033,1033,1033,1033,1033,1033,1033,1033,945,945,1033,1033,1033,1033,1033,1033,1033,1033,1034,3169,3169,3169,3169,3169,3169,1480,1481,3169,3169,698,3169],
    	                    [3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,2466,944,946,3169,3169,3169,3169,3169,3169,3169,1408,769,769,769,4021,4019,4022,769,1410,3169,3169,1392,1393,697],
    	                    [1408,1147,1409,1409,1409,1409,1409,1409,1149,1410,3169,3169,3169,3169,3169,3169,3169,944,946,3169,3169,3169,3169,3169,3169,3169,1496,1409,1409,1409,4109,4107,4110,1409,1498,3169,3169,1480,1481,698],
    	                    [1496,1235,1147,1409,1409,1409,1409,1149,1237,1498,3169,3169,3169,3169,3169,3169,3169,944,946,3169,3169,3169,3169,3169,3169,3169,1496,1409,1409,1409,4197,4471,4198,1409,1498,3526,3260,3260,3260,3260],
    	                    [1496,1235,1235,1147,1409,1148,1148,1148,1148,1148,592,769,769,1410,3169,3169,3169,944,946,3169,3169,3169,3169,3169,3169,3169,1496,1409,1409,1409,1409,1409,1409,1409,1498,3173,4048,4048,4048,4048],
    	                    [1496,1235,1235,1235,1409,1148,1148,1148,1148,1148,1148,1148,592,1498,3169,3169,3169,944,946,3169,3169,3169,3169,3169,2466,3169,1496,1409,1409,1409,1409,1409,1409,1409,1498,3173,4048,4048,4048,4048],
    	                    [1496,1235,1235,1235,1409,592,1148,1148,1148,1148,1148,1148,1148,1498,3169,3169,3169,944,946,3169,3169,3169,3169,3169,3169,3169,1584,1585,1585,1855,1855,1585,1585,1585,1586,3173,4048,4048,4048,4048],
    	                    [1496,1235,1235,1235,1409,1148,1148,1148,1148,1148,1148,1148,1148,1498,3169,3169,3169,944,945,945,945,945,945,945,945,945,945,945,945,945,945,3169,3169,3169,3169,3173,4048,4048,4048,4048],
    	                    [1496,1235,1235,1235,1409,1148,1148,1148,1148,592,1148,1148,1148,1498,3169,3169,2466,944,946,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3173,4048,3696,3697,4048],
    	                    [1496,1235,1235,1235,1409,1233,1236,5456,1324,1324,1324,1324,1324,1296,3169,2466,3169,944,946,3169,3169,2466,3169,3169,3169,3169,3169,3169,1763,1764,3169,3169,3169,3169,2466,3173,4048,3784,3785,4048],
    	                    [1496,1235,1235,1235,1409,1409,1498,1149,1149,1149,1324,1324,4752,1296,3169,3169,3169,944,946,3169,3169,3169,3169,3169,3169,3169,3169,3169,1851,1852,3169,3169,3169,3169,3169,3173,4048,4048,4048,4048],
    	                    [1496,1235,1235,1235,1409,1409,1498,1498,1237,1498,1324,4752,5457,1296,3169,3169,3169,944,946,3169,3169,1408,1409,1410,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3173,4048,4048,4048,4048],
    	                    [1496,1235,1235,1323,2550,2550,1586,1498,1237,1498,1324,1324,1324,1586,3169,3169,3169,944,946,3169,3169,1496,1409,1498,3169,3169,3169,3169,3526,3260,3260,2638,2638,3260,3260,3261,4053,4054,4048,4048],
    	                    [1496,1235,1323,1324,2550,2550,1324,1325,1237,1498,3169,3169,3169,3169,3169,3169,3169,944,946,3169,3169,1584,1585,1586,3169,3169,3169,3169,3173,4048,4048,2638,2638,4048,4048,4048,4141,4142,4048,4048],
    	                    [1496,1323,1324,5456,2550,2550,1324,1324,1325,1498,697,3169,3169,3169,3169,3169,3169,944,946,3169,3169,3169,3169,3169,3169,2466,3169,3169,3173,4048,4048,4048,4048,4048,4048,4048,4048,4048,4048,4048],
    	                    [1584,1585,1585,1585,2550,2550,1585,1585,1585,1586,698,3169,3169,3169,3169,3169,3169,944,946,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3084,3084,3084,3084,3084,3084,3084,3084,3084,3084,3084],
    	                    [3169,3169,3169,3169,945,945,945,945,945,945,945,945,945,945,945,945,945,945,946,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169],
    	                    [3169,3169,3169,2466,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,944,946,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169],
    	                    [3169,3169,3169,3169,3169,3169,2466,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,944,946,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169],
    	                    [3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,944,946,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169],
    	                    [3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,944,946,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169]
    	                ];
    	
    	var mainCollisionData =  [
    	                          [  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  0,  0,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1],
    	                          [  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  0,  0,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1],
    	                          [  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  0,  0,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1],
    	                          [  1,  1,  1,  1,  1,  1,  1,  1,  1,  0,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  0,  0,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1],
    	                          [  1,  1,  1,  1,  1,  1,  1,  1,  0,  0,  0,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  0,  0,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1],
    	                          [  1,  1,  1,  1,  1,  1,  0,  0,  0,  0,  0,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  0,  0,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1],
    	                          [  0,  0,  0,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  1,  1,  0,  0],
    	                          [  0,  0,  0,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  0,  0],
    	                          [  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1],
    	                          [  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  1,  0,  0,  1],
    	                          [  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  1,  0,  0,  0],
    	                          [  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  1,  0],
    	                          [  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  1,  1,  0],
    	                          [  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
    	                          [  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
    	                          [  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
    	                          [  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  1,  1],
    	                          [  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  1,  1,  1,  1],
    	                          [  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  0,  0,  1,  0],
    	                          [  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  0,  0,  1,  0],
    	                          [  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  1,  1,  1,  1,  1,  1,  1,  0,  0,  1,  1,  1],
    	                          [  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  1,  1,  1,  0,  1,  0,  0,  1,  1,  1],
    	                          [  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  1,  0,  1,  0,  1,  1,  1,  1,  1,  1],
    	                          [  1,  1,  1,  1,  0,  0,  0,  0,  0,  0,  1,  1,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  1,  1,  1,  1,  1,  1],
    	                          [  1,  1,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  1,  0,  0,  0,  0,  0,  0,  0,  1,  1,  1,  1,  1,  1],
    	                          [  1,  1,  1,  1,  0,  1,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  1,  0,  0,  1,  1,  1,  1,  1,  1,  1,  1,  1],
    	                          [  1,  1,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  1,  1,  1],
    	                          [  1,  1,  1,  1,  0,  0,  0,  0,  0,  1,  0,  0,  0,  1,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  1,  1,  1],
    	                          [  1,  1,  1,  1,  0,  0,  1,  1,  1,  1,  1,  1,  1,  1,  0,  1,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  1,  1,  0,  0,  0,  0,  1,  1,  1,  1,  1,  1],
    	                          [  1,  1,  1,  1,  0,  0,  1,  1,  1,  1,  1,  1,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  0,  0,  0,  0,  0,  1,  1,  1,  1,  1],
    	                          [  1,  1,  1,  1,  0,  0,  1,  1,  1,  1,  1,  1,  1,  1,  0,  0,  0,  0,  0,  0,  0,  1,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  1,  1,  1],
    	                          [  1,  1,  1,  1,  0,  0,  1,  1,  1,  1,  1,  1,  1,  1,  0,  0,  0,  0,  0,  0,  0,  1,  1,  1,  0,  0,  0,  0,  1,  1,  1,  0,  0,  1,  1,  1,  1,  1,  1,  1],
    	                          [  1,  1,  1,  1,  0,  0,  1,  1,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  1,  0,  0,  0,  0,  1,  1,  1,  0,  0,  1,  1,  1,  1,  1,  1,  1],
    	                          [  1,  1,  1,  1,  0,  0,  1,  1,  1,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1],
    	                          [  1,  1,  1,  1,  0,  0,  1,  1,  1,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
    	                          [  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
    	                          [  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
    	                          [  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
    	                          [  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
    	                          [  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0]
    	                      ];
    	
    	// 슈리마 월드 맵
    	var shurimaWorldMap = [
    	                    [1148,1148,1496,1235,1323,1324,1324,1324,1324,1325,1237,1498,1496,1235,1235,1496,1584,1324,1324,1585,1324,1324,1585,1324,5456,1324,1855,1855,1585,1585,1585,1585,1585,1585,1585,1585,1585,1585,1585,1585],
    	                    [2465,1148,1496,1323,1324,1324,1324,1324,1324,5456,1325,1498,1496,1235,1235,1584,1324,1324,1324,1324,1585,1324,1324,4752,1585,1324,1855,1855,1585,1585,1585,5457,1585,1585,1585,1585,1585,4577,1585,1585],
    	                    [1148,1148,1584,1585,1585,1585,1585,1324,1585,1679,1585,1586,1496,1235,1323,1324,1324,1585,1324,1324,1324,1324,1324,1585,1324,5456,1855,1855,1585,1585,1585,1585,1585,1585,5457,4752,1585,1585,1585,1585],
    	                    [1148,1148,1148,1148,1148,2465,1236,1324,1585,1767,1585,1497,1496,1323,1324,1585,1324,5456,1585,1324,1324,1324,1324,1324,1324,5456,1855,1855,1585,1585,4752,1585,1585,1585,1585,1585,1585,1585,1585,1585],
    	                    [1148,1148,2465,1148,1148,1236,1325,3188,944,945,946,1496,1584,1585,1585,1585,1585,1585,1585,1585,4752,1585,1585,1585,1585,1585,1855,1855,1585,1585,1585,1585,1585,1585,1585,1585,1585,4752,1585,1585],
    	                    [1585,1585,1585,1585,1585,1586,3169,3169,944,945,946,1584,1585,1585,1585,1585,1585,1585,1585,1585,1585,1585,1585,1585,1585,1585,1855,1855,1585,1585,1585,1585,1585,1585,1585,1585,1585,1585,1585,1585],
    	                    [3169,3169,3169,697,697,3169,3169,3169,944,945,946,3169,3169,697,697,3172,3172,3169,3169,3169,3169,3169,3169,3169,3169,3169,944,946,3188,3169,3169,3169,3169,3169,3169,3169,697,697,3169,3169],
    	                    [3169,3169,3169,788,788,3169,3169,3169,944,945,946,3169,3169,788,788,3172,3172,3169,3169,3169,3169,3169,3169,3169,3169,3169,944,946,3169,3169,3169,3169,3169,3169,3169,3169,698,698,3169,3169],
    	                    [3169,3169,3169,3169,3169,3169,3169,3169,944,945,946,3169,3169,3172,3172,3172,3172,3169,3169,3169,3169,2466,3169,3169,3169,3169,944,946,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,697],
    	                    [3169,3169,3169,3169,3169,3169,2466,3169,944,945,946,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,944,946,3169,3169,3169,3169,3169,3169,1392,1393,1918,3169,3169,698],
    	                    [3169,3169,3169,3169,3169,3169,3169,3169,944,945,946,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,944,946,3169,3169,3169,3169,3172,3169,1480,1481,698,3169,3169,3170],
    	                    [3169,3169,3169,3169,2466,3169,3169,3169,944,945,946,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,944,946,3169,3169,3169,3169,3169,3169,3169,3169,697,1392,1393,3170],
    	                    [3169,3169,3169,3169,3169,3169,3169,3169,944,945,946,3169,3169,3169,3169,3169,3169,3169,3169,1763,1764,3169,3169,3169,3169,3169,944,946,3169,3169,3169,3169,3169,3169,3169,610,698,1480,1481,3169],
    	                    [3169,3169,3169,3169,3169,3169,3169,3169,944,945,946,3169,2466,3169,3169,3169,3169,3169,3169,1851,1852,3169,3169,3169,3169,3169,944,945,857,857,857,857,857,857,857,857,857,857,857,857],
    	                    [3169,3169,3169,3169,3169,3169,3169,3169,944,945,946,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,944,945,1033,1033,1033,1033,1033,1033,1033,1033,1033,1033,1033,1033],
    	                    [3169,3169,3169,3169,3169,3169,3169,3169,944,945,946,3169,3169,3169,2466,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,944,946,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3170],
    	                    [3169,3169,3169,3169,3169,3169,3169,3169,944,945,946,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,2466,3169,944,946,3169,3169,3169,3169,3169,3169,3169,3169,1392,1393,1918,697],
    	                    [3169,3169,610,3169,3169,3169,3169,3169,944,945,946,3169,3169,3169,3169,3169,3169,3169,610,3169,3169,3169,3169,3169,3169,3169,944,946,3169,3169,3169,3169,2466,3169,3169,3169,1480,1481,698,698],
    	                    [857,857,857,857,857,857,857,857,945,945,945,857,857,857,857,857,857,857,857,857,857,857,857,857,857,857,945,946,3169,3169,3169,3169,3169,3169,1392,1393,3169,3169,1918,3170],
    	                    [1033,1033,1033,1033,1033,1033,1033,1033,1033,1033,1033,1033,1033,1033,1033,1033,1033,945,945,1033,1033,1033,1033,1033,1033,1033,1033,1034,3169,3169,3169,3169,3169,3169,1480,1481,3169,3169,698,3169],
    	                    [3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,2466,944,946,3169,3169,3169,3169,3169,3169,3169,1408,769,769,769,4021,4019,4022,769,1410,3169,3169,1392,1393,697],
    	                    [1408,1147,1409,1409,1409,1409,1409,1409,1149,1410,3169,3169,3169,3169,3169,3169,3169,944,946,3169,3169,3169,3169,3169,3169,3169,1496,1409,1409,1409,4109,4107,4110,1409,1498,3169,3169,1480,1481,698],
    	                    [1496,1235,1147,1409,1409,1409,1409,1149,1237,1498,3169,3169,3169,3169,3169,3169,3169,944,946,3169,3169,3169,3169,3169,3169,3169,1496,1409,1409,1409,4197,4471,4198,1409,1498,3526,3260,3260,3260,3260],
    	                    [1496,1235,1235,1147,1409,1148,1148,1148,1148,1148,592,769,769,1410,3169,3169,3169,944,946,3169,3169,3169,3169,3169,3169,3169,1496,1409,1409,1409,1409,1409,1409,1409,1498,3173,4048,4048,4048,4048],
    	                    [1496,1235,1235,1235,1409,1148,1148,1148,1148,1148,1148,1148,592,1498,3169,3169,3169,944,946,3169,3169,3169,3169,3169,2466,3169,1496,1409,1409,1409,1409,1409,1409,1409,1498,3173,4048,4048,4048,4048],
    	                    [1496,1235,1235,1235,1409,592,1148,1148,1148,1148,1148,1148,1148,1498,3169,3169,3169,944,946,3169,3169,3169,3169,3169,3169,3169,1584,1585,1585,1855,1855,1585,1585,1585,1586,3173,4048,4048,4048,4048],
    	                    [1496,1235,1235,1235,1409,1148,1148,1148,1148,1148,1148,1148,1148,1498,3169,3169,3169,944,945,945,945,945,945,945,945,945,945,945,945,945,945,3169,3169,3169,3169,3173,4048,4048,4048,4048],
    	                    [1496,1235,1235,1235,1409,1148,1148,1148,1148,592,1148,1148,1148,1498,3169,3169,2466,944,946,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3173,4048,3696,3697,4048],
    	                    [1496,1235,1235,1235,1409,1233,1236,5456,1324,1324,1324,1324,1324,1296,3169,2466,3169,944,946,3169,3169,2466,3169,3169,3169,3169,3169,3169,1763,1764,3169,3169,3169,3169,2466,3173,4048,3784,3785,4048],
    	                    [1496,1235,1235,1235,1409,1409,1498,1149,1149,1149,1324,1324,4752,1296,3169,3169,3169,944,946,3169,3169,3169,3169,3169,3169,3169,3169,3169,1851,1852,3169,3169,3169,3169,3169,3173,4048,4048,4048,4048],
    	                    [1496,1235,1235,1235,1409,1409,1498,1498,1237,1498,1324,4752,5457,1296,3169,3169,3169,944,946,3169,3169,1408,1409,1410,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3173,4048,4048,4048,4048],
    	                    [1496,1235,1235,1323,2550,2550,1586,1498,1237,1498,1324,1324,1324,1586,3169,3169,3169,944,946,3169,3169,1496,1409,1498,3169,3169,3169,3169,3526,3260,3260,2638,2638,3260,3260,3261,4053,4054,4048,4048],
    	                    [1496,1235,1323,1324,2550,2550,1324,1325,1237,1498,3169,3169,3169,3169,3169,3169,3169,944,946,3169,3169,1584,1585,1586,3169,3169,3169,3169,3173,4048,4048,2638,2638,4048,4048,4048,4141,4142,4048,4048],
    	                    [1496,1323,1324,5456,2550,2550,1324,1324,1325,1498,697,3169,3169,3169,3169,3169,3169,944,946,3169,3169,3169,3169,3169,3169,2466,3169,3169,3173,4048,4048,4048,4048,4048,4048,4048,4048,4048,4048,4048],
    	                    [1584,1585,1585,1585,2550,2550,1585,1585,1585,1586,698,3169,3169,3169,3169,3169,3169,944,946,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3084,3084,3084,3084,3084,3084,3084,3084,3084,3084,3084],
    	                    [3169,3169,3169,3169,945,945,945,945,945,945,945,945,945,945,945,945,945,945,946,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169],
    	                    [3169,3169,3169,2466,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,944,946,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169],
    	                    [3169,3169,3169,3169,3169,3169,2466,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,944,946,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169],
    	                    [3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,944,946,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169],
    	                    [3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,944,946,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169]
    	                ];
    	
    	var shurimaWorldColl =  [
    	                          [  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  0,  0,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1],
    	                          [  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  0,  0,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1],
    	                          [  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  0,  0,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1],
    	                          [  1,  1,  1,  1,  1,  1,  1,  1,  1,  0,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  0,  0,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1],
    	                          [  1,  1,  1,  1,  1,  1,  1,  1,  0,  0,  0,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  0,  0,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1],
    	                          [  1,  1,  1,  1,  1,  1,  0,  0,  0,  0,  0,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  0,  0,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1],
    	                          [  0,  0,  0,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  1,  1,  0,  0],
    	                          [  0,  0,  0,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  0,  0],
    	                          [  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1],
    	                          [  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  1,  0,  0,  1],
    	                          [  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  1,  0,  0,  0],
    	                          [  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  1,  0],
    	                          [  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  1,  1,  0],
    	                          [  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
    	                          [  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
    	                          [  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
    	                          [  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  1,  1],
    	                          [  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  1,  1,  1,  1],
    	                          [  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  0,  0,  1,  0],
    	                          [  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  0,  0,  1,  0],
    	                          [  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  1,  1,  1,  1,  1,  1,  1,  0,  0,  1,  1,  1],
    	                          [  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  1,  1,  1,  0,  1,  0,  0,  1,  1,  1],
    	                          [  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  1,  0,  1,  0,  1,  1,  1,  1,  1,  1],
    	                          [  1,  1,  1,  1,  0,  0,  0,  0,  0,  0,  1,  1,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  1,  1,  1,  1,  1,  1],
    	                          [  1,  1,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  1,  0,  0,  0,  0,  0,  0,  0,  1,  1,  1,  1,  1,  1],
    	                          [  1,  1,  1,  1,  0,  1,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  1,  0,  0,  1,  1,  1,  1,  1,  1,  1,  1,  1],
    	                          [  1,  1,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  1,  1,  1],
    	                          [  1,  1,  1,  1,  0,  0,  0,  0,  0,  1,  0,  0,  0,  1,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  1,  1,  1],
    	                          [  1,  1,  1,  1,  0,  0,  1,  1,  1,  1,  1,  1,  1,  1,  0,  1,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  1,  1,  0,  0,  0,  0,  1,  1,  1,  1,  1,  1],
    	                          [  1,  1,  1,  1,  0,  0,  1,  1,  1,  1,  1,  1,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  0,  0,  0,  0,  0,  1,  1,  1,  1,  1],
    	                          [  1,  1,  1,  1,  0,  0,  1,  1,  1,  1,  1,  1,  1,  1,  0,  0,  0,  0,  0,  0,  0,  1,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  1,  1,  1],
    	                          [  1,  1,  1,  1,  0,  0,  1,  1,  1,  1,  1,  1,  1,  1,  0,  0,  0,  0,  0,  0,  0,  1,  1,  1,  0,  0,  0,  0,  1,  1,  1,  0,  0,  1,  1,  1,  1,  1,  1,  1],
    	                          [  1,  1,  1,  1,  0,  0,  1,  1,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  1,  0,  0,  0,  0,  1,  1,  1,  0,  0,  1,  1,  1,  1,  1,  1,  1],
    	                          [  1,  1,  1,  1,  0,  0,  1,  1,  1,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1],
    	                          [  1,  1,  1,  1,  0,  0,  1,  1,  1,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
    	                          [  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
    	                          [  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
    	                          [  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
    	                          [  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
    	                          [  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0]
    	                      ];
    	
    	// 타곤산 던전 1층
    	var tagonLevel1 =  [
    	                    [2966,3227,2550,2874,2967,3402,3403,3403,3403,3403,3404,3226,2608,4634,4634,1288,1288,1289,1289,1289,1289,1289,1289,1289, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                    [2966,2874,2550,3227,2967,3402,3403,235,237,3403,3404,3226,2608,2168,2171,1288,1288,1289,1289,1289,1289,1289,1289,1289, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                    [2966,2612,2550,2612,2967,3402,3403,323,325,3403,3404,3226,2608,2256,2257,1288,1288,1289,1289,1289,1289,1289,1289,1289, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                    [3226,1558,3226,1557,2964,3402,3403,3403,3403,3403,3404,3226,2608,4634,4634,1288,1288,1289,1289,1289,1289,1289,1289,1289, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                    [2964,3226,3226,3226,2172,3402,3403,3403,3403,3403,3404,3226,2608,2965,4634,1288,1288,1289,1289,1289,1289,1289,1289,1289, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                    [3226,3226,2964,3226,2260,3402,3403,3403,3403,3403,3404,3226,2608,4634,2964,1288,1288,1289,1289,1289,1289,1289,1289,1289, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                    [3226,3226,3226,3226,3226,2178,2178,2266,2268,3403,3404,3051,2608,4634,4634,1288,1288,1289,1289,1289,1289,1289,1289,1289, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                    [2964,3226,3226,2964,3226,3402,3403,2266,2268,3403,3404,3226,2608,4634,2965,1288,1288,1289,1289,1289,1289,1289,1289,1289, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                    [3226,3226,3226,3226,3226,3402,3403,2266,2268,3403,3404,3226,2608,2965,4634,1288,1288,1289,1289,1289,1289,1289,1289,1289, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                    [3226,2964,3226,3226,3226,3402,3403,2266,2268,3403,3404,3226,2608,4634,4634,1288,1288,1289,1289,1289,1289,1289,1289,1289, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                    [3226,3226,3226,3226,2964,3402,3403,2266,2268,3403,3404,3226,2608,2964,4634,1288,1288,1289,1289,1289,1289,1289,1289,1289, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                    [3226,3226,2168,2169,3314,3143,3403,2266,2268,3403,3404,3226,2608,4634,3051,1288,1288,1289,1289,1289,1289,1289,1289,1289, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                    [2964,3226,2256,2257,3402,3403,3403,2266,2268,3403,3404,3226,2608,4634,4634,1288,1288,1289,1289,1289,1289,1289,1289,1289, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                    [3315,3315,3315,3315,3143,3403,3403,2266,2268,3403,3404,3226,2608,4634,2964,1288,1288,1289,1289,1289,1289,1289,1289,1289, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                    [3403,3403,3403,3403,3403,3403,3403,2266,2268,3403,3404,3226,2608,2965,4634,1288,1288,1289,1289,1289,1289,1289,1289,1289, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                    [1201,1201,1201,1201,1201,1201,1202,1289,1289,1200,1201,1201,1201,1201,1201,1288,1288,1289,1289,1289,1289,1289,1289,1289, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                    [1201,1201,1201,1201,1201,1201,1201,1201,1201,1201,1201,1201,1201,1201,1201,1201,1288,1289,1289,1289,1289,1289,1289,1289, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                    [1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1288,1289,1289,1289,1289,1289,1289,1289, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                    [1201,1201,1201,1201,1201,1201,1201,1201,1201,1201,1201,1201,1201,1201,1201,1201,1201,1289,1289,1289,1289,1289,1289,1289, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                    [1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                    [1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                    [1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                    [1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                    [1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                    [1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                    [1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                    [1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                    [1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                    [1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                    [1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289,1289, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                    [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                    [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                    [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                    [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                    [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                    [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                    [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                    [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                    [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                    [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]
    	                ];
    	
    	var tagonCollision1 = [
    	                       [  1,  1,  0,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
    	                       [  1,  1,  0,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
    	                       [  1,  1,  0,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
    	                       [  0,  1,  0,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
    	                       [  0,  0,  0,  0,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
    	                       [  0,  0,  0,  0,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
    	                       [  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  1,  1,  1,  1,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
    	                       [  0,  0,  0,  0,  0,  1,  1,  0,  0,  1,  1,  1,  1,  1,  1,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
    	                       [  0,  0,  0,  0,  0,  1,  1,  0,  0,  1,  1,  1,  1,  1,  1,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
    	                       [  0,  0,  0,  0,  0,  1,  1,  0,  0,  1,  1,  1,  1,  1,  1,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
    	                       [  0,  0,  0,  0,  0,  1,  1,  0,  0,  1,  1,  1,  1,  1,  1,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
    	                       [  0,  0,  1,  1,  1,  1,  1,  0,  0,  1,  1,  1,  1,  1,  1,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
    	                       [  0,  0,  1,  1,  1,  1,  1,  0,  0,  1,  1,  1,  1,  1,  1,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
    	                       [  1,  1,  1,  1,  0,  1,  1,  0,  0,  1,  1,  1,  1,  1,  1,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
    	                       [  1,  1,  1,  1,  0,  1,  1,  0,  0,  1,  1,  1,  1,  1,  1,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
    	                       [  1,  1,  1,  1,  1,  1,  1,  0,  0,  1,  1,  1,  1,  1,  1,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
    	                       [  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
    	                       [  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
    	                       [  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
    	                       [  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
    	                       [  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
    	                       [  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
    	                       [  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
    	                       [  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
    	                       [  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
    	                       [  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
    	                       [  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
    	                       [  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
    	                       [  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
    	                       [  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
    	                       [  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
    	                       [  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
    	                       [  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
    	                       [  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
    	                       [  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
    	                       [  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
    	                       [  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
    	                       [  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
    	                       [  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
    	                       [  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0]
    	                   ];
    	
    	// 슈리마 마을
    	var shurimaMapTown = [
    	                      [1496,1148,1409,1409,1409,1409,1409,1409,1409,1409,1409,1409,1409,1409,1409,1409,1410,944,946,1408,1409,1409,1409,1409,1409,1409,1409,1409,1409,1409,1409,1409,1409,1409,1409,1409,1147,1148,1149,1410],
    	                      [1496,1148,1148,1148,1148,1148,1148,1148,1148,1148,1148,1148,1148,1148,1148,1148,1498,944,946,1496,1409,1409,1409,1409,1409,1409,1409,1409,1409,1409,1409,1409,1409,1409,1409,1409,1235,420,1237,1498],
    	                      [1496,1148,1236,5457,1585,1585,1585,1585,3156,1585,1585,1585,1585,5457,1585,1585,1586,944,946,1584,1585,1585,1585,3156,1585,1585,1585,5457,1585,1497,1409,1409,1409,1409,1409,1409,1235,420,1237,1498],
    	                      [1496,1148,1237,3169,3169,3169,3169,3169,945,3169,3169,3169,3169,3169,3169,3169,610,944,946,3169,3169,3169,3169,945,3169,5256,5257,5258,3169,1496,1409,1409,1409,1409,1409,1409,1235,420,1237,1498],
    	                      [1496,1148,1237,3169,3169,3169,3169,2466,945,3169,3169,3169,3169,3169,3169,3169,3169,944,946,2466,3169,3169,3169,945,3169,5344,5345,5346,3169,1584,1585,1585,1585,1497,1148,1148,1235,420,1237,1498],
    	                      [1496,1148,1237,3169,3169,3169,3169,3169,945,945,945,945,945,945,945,945,945,945,946,945,945,945,945,945,3169,5432,5433,5434,3169,3169,3169,3169,3169,1496,1148,1148,1235,420,1237,1498],
    	                      [1496,1148,1237,3169,3169,1408,1147,1147,1149,1149,1410,3169,3169,3169,3169,3169,3169,944,946,3169,3169,3169,3169,3169,3169,5520,5521,5522,3169,3169,3169,3169,2466,1496,1148,1148,1235,420,1237,1498],
    	                      [1496,1148,1237,3169,2466,1496,1235,1496,1498,1498,1498,3169,3169,697,3169,3169,3169,944,946,3169,3169,2466,3169,3169,3169,5259,5260,5261,3169,3169,3169,3169,3169,1496,1148,1148,1323,3156,1325,1498],
    	                      [1496,1148,1237,3169,3169,1496,1496,1496,1498,1498,1498,3169,3169,788,3169,697,3169,944,946,3169,3169,3169,3169,3169,697,5347,5348,5349,697,3169,2466,3169,3169,1496,1148,1148,1148,1148,1148,1498],
    	                      [1496,1148,1237,3169,3169,1496,1496,1584,1586,1498,1498,3169,697,3169,3169,788,3169,944,946,3169,3169,3169,3169,3169,788,944,945,946,788,3169,3169,3169,3169,1584,1585,1497,1148,1148,1148,1498],
    	                      [1496,1148,1237,3169,3169,1496,1584,4576,4576,1586,1498,2466,788,1392,1393,3169,3169,944,945,857,857,857,857,857,857,945,945,945,857,857,857,857,857,857,858,1496,420,420,420,1498],
    	                      [1496,1236,1586,3169,3169,1584,1585,5456,1585,1585,1586,3169,3169,1480,1481,3169,3169,944,945,1033,1033,1033,1033,1033,1033,1033,1033,1033,1033,1033,1033,1033,1033,945,946,1496,1233,420,420,1498],
    	                      [1496,1237,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,944,946,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,944,946,1496,420,420,420,1498],
    	                      [1496,1237,5256,5257,5257,5257,5258,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,944,946,3169,3169,3169,3526,3260,3260,3260,3260,3525,3169,3169,3169,697,3169,944,946,1496,420,420,420,1498],
    	                      [1496,1237,5344,5345,5345,5345,5346,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,944,946,3169,3169,697,3173,4048,4048,4048,4048,3171,1408,1409,1410,788,3169,944,946,1496,420,420,420,1498],
    	                      [1496,1237,5432,5433,5433,5433,5434,3169,3169,3169,2466,3169,3169,3169,3169,3169,3169,944,946,3169,3169,788,3173,4048,4048,4048,4048,3171,1496,1409,1498,3169,3169,944,946,1496,420,420,420,1498],
    	                      [1496,1237,5520,5521,5521,5521,5522,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,944,946,3169,1392,1393,3173,4048,4048,4048,4048,3171,1584,1585,1586,3169,2466,944,946,1496,420,420,420,1498],
    	                      [1496,1237,5259,5521,5260,5521,5261,3169,2466,3169,3169,3169,3169,3169,2466,3169,3169,944,946,3169,1480,1481,3173,4048,4048,4048,4048,3171,3169,2466,3169,3169,3169,944,946,1584,1585,3156,1497,1498],
    	                      [1496,1237,5347,5521,5348,5521,5349,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,944,946,3169,3169,3169,3438,3084,3084,3084,3084,3437,3169,3169,3169,3169,3169,1032,945,857,857,945,1496,1498],
    	                      [1496,1237,3169,944,945,857,857,857,857,857,857,857,857,857,857,857,857,945,945,857,857,857,857,857,857,857,857,857,857,857,857,857,858,1408,1147,1409,1149,1410,1496,1498],
    	                      [1496,1237,3169,1032,1033,1033,1033,1033,1033,1033,1033,1033,1033,1033,1033,1033,1033,1033,1033,1033,1033,1033,1033,1033,1033,1033,1033,1033,1033,1033,1033,945,946,1496,1235,1409,1237,1498,1496,1498],
    	                      [1496,1237,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,1408,1409,1409,1409,1409,1409,1409,1409,1409,1409,1409,1409,1409,1409,1409,2465,1409,1409,1410,944,946,1496,1323,4576,1325,1498,1496,1498],
    	                      [1496,1237,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,1496,1409,1147,1409,1409,1409,1409,1409,1409,2465,1409,1409,1409,1409,1409,1409,1149,1409,1498,944,946,1584,1585,5456,1585,1586,1496,1498],
    	                      [1496,1237,3169,3169,3169,2466,3169,2466,3169,3169,3169,3169,1496,1409,1235,1409,1147,1409,1409,1409,1409,1409,1409,1409,1409,1409,1237,1409,1237,1409,1498,944,946,3169,3169,3169,3169,3169,1496,1498],
    	                      [1496,1237,3169,3169,2466,3169,3169,3169,3169,1392,1393,3169,1496,1409,1235,1409,1235,1409,1147,1409,1409,1409,1409,1409,1149,1409,1237,1409,1237,1409,1498,944,946,5256,5257,5257,5257,5258,1496,1498],
    	                      [1496,1237,3169,3169,3169,3169,3169,3169,3169,1480,1481,3169,1496,1409,1235,1409,1235,1409,1235,1409,1147,1148,1149,1409,1237,2465,1237,1409,1237,1409,1498,944,946,5344,5345,5345,5345,5346,1496,1498],
    	                      [1584,1586,610,3169,3169,3169,3169,3169,3169,3169,3169,3169,1496,1409,1235,1409,1235,1409,1235,1409,1235,3102,1237,1409,1237,1409,1237,1409,1237,1409,1498,944,946,5432,5433,5433,5433,5434,1496,1498],
    	                      [857,857,857,857,857,857,857,857,857,857,857,858,1496,1409,1235,1409,1235,1409,1235,1409,1235,1409,1237,1409,1237,1409,1237,1409,1237,1409,1498,944,946,5520,5521,5521,5521,5522,1496,1498],
    	                      [1033,1033,1033,1033,1033,1033,1033,1033,1033,1033,945,946,1496,1409,1235,1409,1235,2465,1235,1409,1323,4664,1325,1409,1237,1409,1237,1409,1237,1409,1498,944,946,5347,5521,5348,5521,5349,1496,1498],
    	                      [1408,1410,3169,3169,3169,3169,3169,3169,3169,3169,944,946,1496,1409,1235,1409,1235,1409,1235,1409,1409,1409,1409,1409,1237,1409,1237,1409,1237,1409,1498,944,945,945,945,945,3169,3169,1496,1498],
    	                      [1496,1498,1408,1147,1147,1149,1149,1149,1410,3169,944,946,1496,1409,1235,1409,1235,1409,1323,4664,1324,1324,1324,5457,1325,1148,1237,1409,1237,1409,1498,944,946,3169,3169,3169,3169,3169,1496,1498],
    	                      [1496,1498,1496,1235,1235,1237,1237,1237,1498,3169,944,946,1496,1409,1235,1409,1235,1409,1409,1409,1409,1409,1409,1409,1409,1409,1237,1409,1237,1409,1498,944,946,3169,3169,3169,3169,3169,1496,1498],
    	                      [1496,1498,1496,1235,1235,1237,1237,1237,1498,3169,944,946,1496,1409,1235,1409,1323,1324,1324,1324,1324,1324,1324,4664,5457,1324,1325,1148,1237,1409,1498,944,946,3169,3169,3169,3169,3169,1496,1498],
    	                      [1496,1498,1496,1235,1235,1237,1237,1237,1498,3169,944,946,1496,1409,1235,1409,1409,1409,1409,1409,1409,1409,1409,1409,1409,1409,1409,1409,1237,1409,1498,944,946,3169,3169,2466,3169,3169,1496,1498],
    	                      [1496,1498,1496,1235,1235,1237,1237,1237,1498,3169,944,946,1496,1409,1323,1324,1324,1324,4664,1324,5456,1324,1324,1324,1324,1324,1324,1324,1325,1409,1498,944,946,3169,3169,3169,3169,3169,1496,1498],
    	                      [1496,1498,1496,1235,1323,1325,1237,1237,1498,3169,944,946,1496,1409,1409,1409,1409,1409,1409,1409,1409,1409,1409,1409,1409,1409,1409,1409,1409,1409,1498,944,946,3169,3169,3169,3169,3169,1496,1498],
    	                      [1496,1498,1496,1323,4576,4576,1325,1237,1498,2466,944,946,1584,5456,1585,1585,1585,1585,1585,5457,1585,1767,1585,1585,1585,5457,1585,1585,1585,1585,1586,944,946,3169,2466,3169,3169,3169,1496,1498],
    	                      [1496,1498,1496,1323,4576,4576,4576,1325,1498,3169,944,945,857,857,857,857,857,857,857,857,857,857,857,857,857,857,857,857,857,857,857,945,946,3169,3169,3169,3169,3169,1496,1498],
    	                      [1496,1498,1584,5456,1585,1585,1585,1585,1586,3169,1032,1033,1033,1033,1033,1033,1033,1033,1033,1033,1033,1033,1033,1033,1033,1033,1033,1033,1033,1033,1033,945,946,3169,3169,3169,3169,3169,1496,1498],
    	                      [1496,1498,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,3169,944,946,3169,3169,3169,3169,3169,1496,1498]
    	                  ];
    	
    	var shurimaTownColl = [
    	                       [  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  1,  1],
    	                       [  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  1,  1],
    	                       [  1,  0,  1,  1,  1,  1,  1,  1,  0,  1,  1,  1,  1,  1,  1,  1,  1,  0,  0,  1,  1,  1,  1,  0,  1,  1,  1,  1,  1,  1,  0,  0,  0,  0,  0,  0,  1,  0,  1,  1],
    	                       [  1,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  1,  0,  1,  0,  0,  0,  0,  0,  0,  1,  0,  1,  1],
    	                       [  1,  0,  1,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  1,  1,  1,  0,  1,  1,  1,  1,  1,  0,  0,  1,  0,  1,  1],
    	                       [  1,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  1,  0,  0,  0,  0,  0,  1,  0,  0,  1,  0,  1,  1],
    	                       [  1,  0,  1,  0,  0,  1,  1,  1,  1,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  1,  0,  0,  0,  0,  1,  1,  0,  0,  1,  0,  1,  1],
    	                       [  1,  0,  1,  0,  1,  1,  1,  1,  1,  1,  1,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  1,  1,  1,  0,  0,  0,  0,  0,  1,  0,  0,  1,  0,  1,  1],
    	                       [  1,  0,  1,  0,  0,  1,  1,  1,  1,  1,  1,  0,  0,  1,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  0,  1,  1,  0,  1,  0,  0,  1,  0,  0,  0,  0,  0,  1],
    	                       [  1,  0,  1,  0,  0,  1,  1,  1,  1,  1,  1,  0,  1,  0,  0,  1,  0,  0,  0,  1,  0,  0,  0,  0,  1,  0,  0,  0,  1,  0,  0,  0,  0,  1,  1,  1,  0,  0,  0,  1],
    	                       [  1,  0,  1,  0,  0,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  1],
    	                       [  1,  1,  1,  0,  0,  1,  1,  1,  1,  1,  1,  0,  0,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  1],
    	                       [  1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  1],
    	                       [  1,  1,  1,  1,  1,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  1,  1,  1,  1,  0,  0,  0,  1,  0,  0,  0,  1,  0,  0,  0,  1],
    	                       [  1,  1,  1,  1,  1,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  0,  0,  0,  1,  0,  0,  0,  1],
    	                       [  1,  1,  1,  1,  1,  1,  1,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  0,  0,  0,  0,  1,  0,  0,  0,  1],
    	                       [  1,  1,  1,  1,  1,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  0,  1,  0,  0,  1,  0,  0,  0,  1],
    	                       [  1,  1,  1,  1,  1,  1,  1,  0,  1,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  1,  1,  1,  1,  1,  1,  1,  1,  0,  1,  0,  0,  0,  0,  0,  1,  1,  0,  1,  1],
    	                       [  1,  1,  1,  1,  0,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1],
    	                       [  1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  1,  1,  1,  1,  1],
    	                       [  1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  1,  1,  1,  1,  1],
    	                       [  1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  0,  0,  1,  1,  1,  1,  1,  1,  1],
    	                       [  1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  0,  0,  1,  1,  1,  1,  1,  1,  1],
    	                       [  1,  1,  0,  0,  0,  1,  0,  1,  0,  0,  0,  0,  1,  0,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  0,  0,  0,  0,  0,  0,  0,  1,  1],
    	                       [  1,  1,  0,  0,  1,  0,  0,  0,  0,  1,  1,  0,  1,  0,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  0,  0,  1,  1,  1,  1,  1,  1,  1],
    	                       [  1,  1,  0,  0,  0,  0,  0,  0,  0,  1,  1,  0,  1,  0,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  0,  0,  1,  1,  1,  1,  1,  1,  1],
    	                       [  1,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  0,  0,  1,  1,  1,  1,  1,  1,  1],
    	                       [  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  1,  1,  1,  1,  1,  1,  1,  0,  1,  1,  1,  1,  1,  1,  1,  1,  1,  0,  0,  1,  1,  1,  1,  1,  1,  1],
    	                       [  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  1,  1,  1,  1,  1,  1,  1,  0,  1,  1,  1,  1,  1,  1,  1,  1,  1,  0,  0,  1,  1,  0,  1,  1,  1,  1],
    	                       [  1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  1,  1,  1,  1,  1,  0,  0,  0,  1,  1,  1,  1,  1,  1,  1,  1,  1,  0,  0,  0,  0,  0,  0,  0,  1,  1],
    	                       [  1,  1,  1,  1,  1,  1,  1,  1,  1,  0,  0,  0,  1,  0,  1,  1,  1,  1,  1,  0,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  0,  0,  0,  0,  0,  0,  0,  1,  1],
    	                       [  1,  1,  1,  1,  1,  1,  1,  1,  1,  0,  0,  0,  1,  0,  1,  1,  1,  1,  1,  0,  0,  0,  0,  0,  1,  1,  1,  1,  1,  1,  1,  0,  0,  0,  0,  0,  0,  0,  1,  1],
    	                       [  1,  1,  1,  1,  1,  1,  1,  1,  1,  0,  0,  0,  1,  0,  1,  1,  1,  1,  1,  1,  1,  1,  1,  0,  1,  1,  1,  1,  1,  1,  1,  0,  0,  0,  0,  0,  0,  0,  1,  1],
    	                       [  1,  1,  1,  1,  1,  1,  1,  1,  1,  0,  0,  0,  1,  0,  1,  1,  1,  1,  0,  0,  0,  0,  0,  0,  1,  1,  1,  1,  1,  1,  1,  0,  0,  0,  0,  1,  0,  0,  1,  1],
    	                       [  1,  1,  1,  1,  1,  1,  1,  1,  1,  0,  0,  0,  1,  0,  1,  1,  1,  1,  0,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  0,  0,  0,  0,  0,  0,  0,  1,  1],
    	                       [  1,  1,  1,  1,  1,  1,  1,  1,  1,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  0,  0,  0,  0,  0,  0,  0,  1,  1],
    	                       [  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  0,  0,  1,  1,  1,  1,  1,  1,  1,  1,  1,  0,  1,  1,  1,  1,  1,  1,  1,  1,  1,  0,  0,  0,  1,  0,  0,  0,  1,  1],
    	                       [  1,  1,  1,  1,  1,  1,  1,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1],
    	                       [  1,  1,  1,  1,  1,  1,  1,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1],
    	                       [  1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1]
    	                   ];


    	var foregroundMap = new Map(16, 16);
    	// foregroundMap.image = game.assets['img/map1.png'];
    	foregroundMap.image = game.assets['img/complete1.gif'];
    	
    	// 슈리마 월드(최고 기본 맵)
    	var mainForegroundMap = [
    	                         [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                         [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                         [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                         [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                         [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                         [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                         [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                         [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                         [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                         [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                         [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                         [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                         [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                         [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                         [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                         [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                         [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                         [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                         [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                         [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                         [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                         [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                         [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                         [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                         [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                         [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                         [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                         [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                         [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                         [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                         [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                         [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                         [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                         [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                         [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                         [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                         [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                         [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                         [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                         [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]
    	                         ];
    	
    	// 슈리마 월드 맵
    	var shurimaWorldFore = [
    	                         [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                         [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                         [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                         [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                         [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                         [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                         [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                         [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                         [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                         [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                         [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                         [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                         [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                         [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                         [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                         [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                         [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                         [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                         [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                         [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                         [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                         [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                         [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                         [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                         [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                         [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                         [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                         [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                         [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                         [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                         [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                         [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                         [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                         [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                         [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                         [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                         [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                         [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                         [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                         [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]
    	                         ];
    	
    	// 타곤산 1층
    	var tagonFore1 =  [
    	                   [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                   [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                   [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                   [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                   [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                   [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                   [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                   [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                   [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                   [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                   [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                   [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                   [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                   [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                   [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                   [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                   [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                   [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                   [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                   [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                   [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                   [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                   [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                   [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                   [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                   [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                   [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                   [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                   [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                   [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                   [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                   [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                   [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                   [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                   [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                   [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                   [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                   [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                   [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                   [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]
    	               ];
    	
    	// 슈리마 타운
    	var shurimaTownFore = [
    	                       [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                       [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                       [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                       [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                       [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                       [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                       [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                       [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                       [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                       [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                       [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                       [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                       [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                       [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                       [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                       [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                       [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                       [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                       [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                       [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                       [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                       [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                       [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                       [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                       [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                       [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                       [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                       [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                       [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                       [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                       [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                       [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                       [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                       [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                       [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                       [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                       [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                       [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                       [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    	                       [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]
    	                   ];
    	
       	map.loadData(mainLoadData);
    	map.collisionData = (mainCollisionData);
    	foregroundMap.loadData(mainForegroundMap);
	    // 맴설정 끝
 
    	
/** ***************************************************** */
// 메세지 창 셋팅 시작
/** ***************************************************** */  
    
	    var status = function () {
	     go.say('== ' + playerName + ' ==' +
	     '<br> Level : ' + playerLevel +
	     '<br> HP : ' + playerHp + ' / ' + playerMaxHp +
	     '<br> MP : ' + playerMp + ' / ' + playerMaxMp +
	     '<br> Str : ' + playerStr +
	     '<br> Dex : ' + playerDex +
	     '<br> Def : ' + playerDef +
	     '<br> Exp : ' + playerExp + ' / ' + playerNextExp +
	     '<br> Gold : ' + playerMoney + 'G');
	    };  

	    var Yes = new Label ('');

	    var No = new Label ('');
	   
	    var yesorno = function () {
	     Yes.text = '[<-] YES';
	     Yes.color = 'white';
	     Yes.moveTo (veiwX + 120, veiwY + 90);
	     No.text = 'NO [->]';
	     No.color = 'white';
	     No.moveTo (veiwX + 220, veiwY + 90);
	    };

	    Yes.on ('touchstart', function() {
	     if (shoping) {
	        playerMoney -= item[itemselect].price;
	        inventory[itemnum] = itemselect;
	        itemnum += 1;
	        itemtxtre();
	        shoping = false;
	        go.sayend();
	     } else if (selling) {
	        playerMoney += item[itemselect].price;
	        inventory.splice (itemslot, 1);
	        inventory.push (0);
	        itemnum -= 1;
	        itemtxtre();
	        selling = false;
	        go.sayend();
	     } else if (useitem) {
	        if (playerHp + 10 < playerMaxHp) {
	          playerHp += 10;
	          inventory.splice (itemslot, 1);
	          inventory.push (0);
	          itemnum -= 1;
	          itemtxtre();
	          go.sayend();
	          useitem = false;
	        } else if (playerHp + 10 >= playerMaxHp) {
	          playerHp = playerMaxHp;
	          inventory.splice (itemslot, 1);
	         inventory.push (0);
	          itemnum -= 1;
	          itemtxtre();
	          go.sayend();              
	          useitem = false; 
	        }
	      }
	    });

	    No.on ('touchstart', function() {
	     if (shoping) {
	      shoping = false;
	      go.sayend();
	     } else if (selling) {
	      selling = false;
	      go.sayend();
	     } else if (useitem) {
	      go.sayend();
	      useitem = false;
	     }
	    });

	    var textTemp = new Label("");
	    var useitem = false;
	
	    
/** ***************************************************** */
// 메뉴 창 셋팅 시작
/** ***************************************************** */  
    	   
	    var Menu = new Scene(320, 320);
	    var menucur = new Sprite(140, 20);
	    menucur.backgroundColor = 'black';
	    menucur.moveTo (80, 100);
 
	    var menustat = new Label ("STATUS");
	    menustat.color = 'white';
	    menustat.textAlign = 'center';
	    menustat.font = 'bold 20px 돋움';
	    menustat.y = 100;

	    var menuiven = new Label ("INVENTORY");
	    menuiven.color = 'white';
	    menuiven.textAlign = 'center';
	    menuiven.font = 'bold 20px 돋움';
	    menuiven.y = 140;

	    var menufile = new Label ("FILE");
	    menufile.color = 'white';
	    menufile.textAlign = 'center';
	    menufile.font = 'bold 20px 돋움';
	    menufile.y = 180;

	    var menuback = new Label ("BACK");
	    menuback.color = 'white';
	    menuback.textAlign = 'center';
	    menuback.font = 'bold 20px 돋움';
	    menuback.y = 220;

	    Menu.on ('enterframe', function() {
	      if (menucur.y < 220 && game.input.down) {
	        menucur.y += 40;
	        game.input.down = false;
	      } else if (menucur.y > 100 && game.input.up) {
	        menucur.y -= 40;
	        game.input.up = false;
	      }
	    });
	     

	    Menu.on ('abuttondown', function() {
	      if (menucur.y == 100) {
	        game.popScene (Menu);
	        status();
	      } else if (menucur.y == 140) {
	        game.replaceScene (Inven);
	        useitem = true;
	      } else if (menucur.y == 180) {
	        game.replaceScene (File);
	      } else {
	        game.popScene (Menu);
	      }
	    });

	    menustat.on ('touchstart', function() {
	      game.popScene (Menu);
	      status();
	    });

	    menuiven.on ('touchstart', function() {     
	      game.replaceScene (Inven);
	      useitem = true;
	    });

	    menufile.on ('touchstart', function() {     
	      game.replaceScene (File);
	    });

	    menuback.on ('touchstart', function() {
	      game.popScene (Menu);
	    });
	   
	    Menu.addChild(menucur);
	    Menu.addChild(menustat);
	    Menu.addChild(menuiven);
	    Menu.addChild(menufile);   
	    Menu.addChild(menuback);
	    Menu.addChild(textTemp);
	    Menu.backgroundColor = 'rgba(0, 0, 0, 0.3)';
	    
	    

/** ***************************************************** */
// 플레이어 설정 시작
/** ***************************************************** */  
	    
	    var player = new Sprite (32, 32);
	    player.image = game.assets['img/ez.png'];
	    player.moveTo (16 * 7 - 8, 16 * 10 - 16);
	    player.direction = 0;
	    player.walk = 1;
	    player.isMoving = false;
	    player.on('enterframe', function() {
	      player.frame = player.direction * 9 + player.walk;      
	      if (!player.isMoving) {
	        player.vx = player.vy = 0;
	        if (game.input.left) {
	          player.direction = 1;
	          player.vx = -4;
	        } else if (game.input.right) {
	         player.direction = 2;
	         player.vx = 4;
	        } else if (game.input.up) {
	         player.direction = 3;
	         player.vy = -4;
	        } else if (game.input.down) {
	         player.direction = 0;
	         player.vy = 4;
	        }
	        if (player.vx != 0 || player.vy != 0 ) {
	          player.toX = player.x + (player.vx != 0 ? player.vx / 4 * 16 : 0) + 16;
	          player.toY = player.y + (player.vy != 0 ? player.vy / 4 * 16 : 0) + 16;
	          if (0 <= player.toX && player.toX < map.width && 0 <= player.toY && player.toY < map.height && !map.hitTest(player.toX, player.toY)) {
	            player.isMoving = true;
	            go.sayend();
	          }
	        }
	      } else {
	       player.moveBy(player.vx, player.vy);
	       player.walk++;
	       player.walk %= 3;
	       if ((player.vx && (player.x-8) % 16 === 0) || (player.vy && player.y % 16 === 0)) {
	         player.isMoving = false;
	         player.walk = 1;
	       }
	     }

	     if (player.x <= 160) {
	       veiwX = 0;
	     } else if (player.x > 160 && player.x <= map.width - 176) {
	       veiwX = player.x - 152;
	     } else if (player.x > map.width - 176) {
	       veiwX = map.width - 320;
	     }

	     if (player.y <= 160) {
	       veiwY = 0;
	     } else if (player.y >160 && player.y <= map.height - 176) {
	       veiwY = player.y - 152;
	     } else if (player.y > map.height -176) {
	       veiwY = map.height - 320; 
	     }

	     // 레벨업 스탯 상승치
	     if (playerExp >= playerNextExp) {
	       go.say(playerName + ' Level UP!!');
	       game.assets['sound/dqlevelup.mp3'].play();
	       playerNextExp += 5;
	       playerMaxHp += 2;
	       playerMaxMp += 2;
	       playerStr += 1;
	       playerDex += 1;
	       playerDef += 1;
	       playerLevel +=1;
	       playerHp = playerMaxHp;
	       playerMp = playerMaxMp;
	     }

	     if (useitem) {
	       if (itemselect == 1) {
	         go.say('Use Mdicinal Herb?');
	         yesorno();
	         if (game.input.left) {
	           if (playerHp + 10 < playerMaxHp) {
	             playerHp += 10;
	             inventory.splice (itemslot, 1);
	             inventory.push (0);
	             itemnum -= 1;
	             itemtxtre();
	             go.sayend();
	             useitem = false;
	            } else if (playerHp + 10 >= playerMaxHp) {
	             playerHp = playerMaxHp;
	             inventory.splice (itemslot, 1);
	             inventory.push (0);
	             itemnum -= 1;
	             itemtxtre();
	             go.sayend();              
	             useitem = false;
	            }
	          } else if (game.input.right) {
	            go.sayend();
	            useitem = false;
	          } else if (game.input.up) {
	            go.sayend();
	            useitem = false;
	          } else if (game.input.down) {
	            go.sayend();
	            useitem = false;
	          }
	        } else {
	         go.say('Can not use this');
	         useitem = false;
	        }
	     }
	 
	     if (inventory.indexOf(2) == -1) {
	       player.image = game.assets ['img/ez.png'];
	      } else {
	       player.image = game.assets ['img/ez.png'];
	      }

	     textTemp.text = player.x + "/" + player.y;
	      
	    });
	    
        game.rootScene.on ('abuttondown', function() {
            go.sayend();
            game.pushScene (Menu);
        });

        player.on ('touchstart', function() {
            go.sayend();
            game.pushScene (Menu);
         });

        // 기본 함수
        if (player.x <= 160) {
          viewX = 0;
        } else if (player.x > 160 && player.x <= map.width - 176) {
          viewX = player.x - 152;
        } else if (player.x > map.width - 176) {
          viewX = map.width - 320;
        }
        
        if (player.y <= 160) {
            viewY = 0;
          } else if (player.y >160 && player.y <= map.height - 176) {
            viewY = player.y - 152;
          } else if (player.y > map.height -176) {
            viewY = map.height - 320; 
          }
           

    	   
/** ***************************************************** */
// 메뉴 -> 파일 기능 시작
/** ***************************************************** */  
        
    	var File = new Scene(320, 320);
	    var filecur = new Sprite(140, 20);
	    filecur.backgroundColor = 'black';
	    filecur.moveTo (80, 100);

	    var filesave = new Label ("Save");
	    filesave.color = 'white';
	    filesave.textAlign = 'center';
	    filesave.font = 'bold 20px 돋움';
	    filesave.y = 100;

	    var fileload = new Label ("Load");
	    fileload.color = 'white';
	    fileload.textAlign = 'center';
	    fileload.font = 'bold 20px 돋움';
	    fileload.y = 140;

	    var fileback = new Label ("Back");
	    fileback.color = 'white';
	    fileback.textAlign = 'center';
	    fileback.font = 'bold 20px 돋움';
	    fileback.y = 180;

	    File.on ('enterframe', function() {
	     if (filecur.y < 180 && game.input.down) {
	       filecur.y += 40;
	       game.input.down = false;
	     } else if (filecur.y > 100 && game.input.up) {
	       filecur.y -= 40;
	       game.input.up = false;
	     }
	    });
	    
	    // JSON.stringify() : 자바스크립트 객체를 JSON형식의 문자열로 만든다.
	    // JSON.parse() : JSON형식의 문자열을 자바스크립트 객체로 만든다.
	    
	    File.on ('abuttondown', function() {
	     if (filecur.y == 100) {
	       window.localStorage.setItem('PLAYERX', player.x);
	       window.localStorage.setItem('PLAYERY', player.y);
	       window.localStorage.setItem('EXP', playerExp);
	       window.localStorage.setItem('NEXTEXP', playerNextExp);
	       window.localStorage.setItem('HP', playerHp);
	       window.localStorage.setItem('MAXHP', playerMaxHp);
	       window.localStorage.setItem('MP', playerMp);
	       window.localStorage.setItem('MAXMP', playerMaxMp);
	       window.localStorage.setItem('MONEY', playerMoney);
	       window.localStorage.setItem('LOCATIONCODE', locationCode);
	       window.localStorage.setItem('INVENTORY', JSON.stringify(inventory));
	       window.localStorage.setItem('mainMap', JSON.stringify(mainLoadData)); // 지도
																					// 데이터
	       window.localStorage.setItem('collMap', JSON.stringify(mainCollisionData));
	       window.localStorage.setItem('foreMap', JSON.stringify(mainForegroundMap));
	       game.popScene (File);
	     } else if (filecur.y == 140) {
	       player.x = parseInt(window.localStorage.getItem ('PLAYERX'));
	       player.y = parseInt(window.localStorage.getItem ('PLAYERY'));
	       playerExp = parseInt(window.localStorage.getItem ('EXP'));
	       playerNextExp= parseInt(window.localStorage.getItem ('NEXTEXP')); 
	       playerHp = parseInt(window.localStorage.getItem ('HP'));
	       playerMaxHp = parseInt(window.localStorage.getItem ('MAXHP'));
	       playerMp = parseInt(window.localStorage.getItem ('MP'));
	       playerMaxMp = parseInt(window.localStorage.getItem ('MAXMP'));
	       playerMoney = parseInt(window.localStorage.getItem ('MONEY'));
	       locationCode = parseInt(window.localStorage.getItem ('LOCATIONCODE'));
	       inventory = window.localStorage.getItem ('INVENTORY');
	       inventory = JSON.parse(inventory);
	       mainLoadData = window.localStorage.getItem ('mainMap'); // 지도 데이터
	       mainLoadData = JSON.parse(mainLoadData);
	       mainCollisionData = window.localStorage.getItem ('collMap');
	       mainCollisionData = JSON.parse(mainCollisionData);
	       mainForegroundMap = window.localStorage.getItem ('foreMap');
	       mainForegroundMap = JSON.parse(mainForegroundMap);
	       console.log('load location code'+locationCode);
	       go.refreshMap(); // 지도 갱신
	      
	       if(locationCode==100){go.shurima();} // 현재 슈리마 월드일 경우 실행
	       if(locationCode==101){go.shurimatown();} // 현재 슈리마 월드일 경우 실행
	       if(locationCode==200){go.shurimaunder();} // 현재 슈리마 월드일 경우 실행
	       
	       itemtxtre();
	       game.popScene (File);
	     } else {
	       game.popScene (File);
	     }
	    });
	    
	    filesave.on ('touchstart', function() {
	       window.localStorage.setItem('PLAYERX', player.x);
	       window.localStorage.setItem('PLAYERY', player.y);
	       window.localStorage.setItem('EXP', playerExp);
	       window.localStorage.setItem('NEXTEXP', playerNextExp);
	       window.localStorage.setItem('HP', playerHp);
	       window.localStorage.setItem('MAXHP', playerMaxHp);
	       window.localStorage.setItem('MP', playerMp);
	       window.localStorage.setItem('MAXMP', playerMaxMp);
	       window.localStorage.setItem('MONEY', playerMoney);
	       window.localStorage.setItem('LOCATIONCODE', locationCode);
	       window.localStorage.setItem('INVENTORY', JSON.stringify(inventory));   
	       window.localStorage.setItem('mainMap', JSON.stringify(mainLoadData));
	       window.localStorage.setItem('collMap', JSON.stringify(mainCollisionData));
	       window.localStorage.setItem('foreMap', JSON.stringify(mainForegroundMap));
	       game.popScene (File);
	    });

	    fileload.on ('touchstart', function() {     
	       player.x = parseInt(window.localStorage.getItem ('PLAYERX'));
	       player.y = parseInt(window.localStorage.getItem ('PLAYERY'));
	       playerExp = parseInt(window.localStorage.getItem ('EXP'));
	       playerNextExp= parseInt(window.localStorage.getItem ('NEXTEXP')); 
	       playerHp = parseInt(window.localStorage.getItem ('HP'));
	       playerMaxHp = parseInt(window.localStorage.getItem ('MAXHP'));
	       playerMp = parseInt(window.localStorage.getItem ('MP'));
	       playerMaxMp = parseInt(window.localStorage.getItem ('MAXMP'));
	       playerMoney = parseInt(window.localStorage.getItem ('MONEY'));
	       locationCode = parseInt(window.localStorage.getItem ('LOCATIONCODE'));
	       inventory = window.localStorage.getItem ('INVENTORY');
	       inventory = JSON.parse(inventory);
	       mainLoadData = window.localStorage.getItem ('mainMap'); // 지도데이터
	       mainLoadData = JSON.parse(mainLoadData);
	       mainCollisionData = window.localStorage.getItem ('collMap');
	       mainCollisionData = JSON.parse(mainCollisionData);
	       mainForegroundMap = window.localStorage.getItem ('foreMap');
	       mainForegroundMap = JSON.parse(mainForegroundMap);
	       go.refreshMap(); // 지도 갱신
	       
	       if(locationCode==100){go.shurima();} // 현재 슈리마 월드일 경우 실행
	       if(locationCode==101){go.shurimatown();} // 현재 슈리마 월드일 경우 실행
	       if(locationCode==200){go.shurimaunder();} // 현재 슈리마 월드일 경우 실행
	       
	       itemtxtre();
	       game.popScene (File);
	       
	    });

	    
	    fileback.on ('touchstart', function() {
	     game.popScene (Menu);
	    });
	   
	    File.addChild(filecur);
	    File.addChild(filesave);
	    File.addChild(fileload);
	    File.addChild(fileback);
	    File.backgroundColor = 'rgba(0, 0, 0, 0.3)';
    	// 파일 끝

	    	    	    
/** ***************************************************** */
// 슈리마 월드 상점 시작(100)
/** ***************************************************** */  
	    
    	// 아이템 코드
    	item = [
    	        {id: 0, name: '', text: '', price: ''},
    	        {id: 1, name: 'Medicinal Herb', text: ' HP +10', price: '10'},
    	        {id: 2, name: 'Cloth Armor', text: ' DEX +1', price: '50'},
    	        {id: 3, name: 'Fire Ball', text: ' Demage +5(MP -2)', price: '20'},
    	        {id: 4, name: 'Goods', text: 'Goods', price: '100'}
    	       ]
    	// 아이템 끝
    	
	    var shop = [1, 2, 3, 4];

	    var shoping = false;

	    var Shop = new Scene (320, 320);

	    var shopcur = new Sprite(300, 20);
	    shopcur.backgroundColor = 'black';
	    shopcur.moveTo (10, 5);
	    
	    var sitemlist1 = new Label ('');
	    sitemlist1.color = 'white';
	    sitemlist1.moveTo (10, 10);
	    sitemlist1.text = ' ' + item[shop[0]].name + ' : ' + item[shop[0]].text + '     ' + item[shop[0]].price + 'G';
	    var sitemlist2 = new Label ('');
	    sitemlist2.color = 'white';
	    sitemlist2.moveTo (10, 40);
	    sitemlist2.text = ' ' + item[shop[1]].name + ' : ' + item[shop[1]].text + '     ' + item[shop[1]].price + 'G';
	    var sitemlist3 = new Label ('');
	    sitemlist3.color = 'white';
	    sitemlist3.moveTo (10, 70);
	    sitemlist3.text = ' ' + item[shop[2]].name + ' : ' + item[shop[2]].text + '     ' + item[shop[2]].price + 'G';
	    var sitemlist4 = new Label ('');
	    sitemlist4.color = 'white';
	    sitemlist4.moveTo (10, 100);
	    sitemlist4.text = ' ' + item[shop[3]].name + ' : ' + item[shop[3]].text + '     ' + item[shop[3]].price + 'G';
	    var sitemexit = new Label ('Back');
	    sitemexit.color = 'white';
	    sitemexit.moveTo (10, 130);

	    Shop.on ('enterframe', function() {
	      if (shopcur.y < 100 && game.input.down) {
	        shopcur.y += 30;
	        game.input.down = false;
	      } else if (shopcur.y > 5 && game.input.up) {
	        shopcur.y -= 30;
	        game.input.up = false;
	      }
	     });

	    Shop.on ('abuttondown', function() {
	      if (shopcur.y == 5) {
	        game.popScene (Shop);
	        itemselect = shop[0];
	      } else if (shopcur.y == 35) {
	        game.popScene (Shop);
	        itemselect = shop[1];
	      } else if (shopcur.y == 65) {
	        game.popScene (Shop);
	        itemselect = shop[2];
	      } else if (shopcur.y == 95) {
	        game.popScene (Shop);
	        itemselect = shop[3];
	      } else if (shopcur.y == 125) {
	        game.popScene (Shop);
	        shoping = false;
	      }
	    });

	    sitemlist1.on ('touchstart', function() {
	      game.popScene (Shop);
	        itemselect = shop[0];
	    });
	    sitemlist2.on ('touchstart', function() {
	      game.popScene (Shop);
	        itemselect = shop[1];
	    });
	    sitemlist3.on ('touchstart', function() {
	      game.popScene (Shop);
	        itemselect = shop[2];
	    });
	    sitemlist4.on ('touchstart', function() {
	      game.popScene (Shop);
	        itemselect = shop[3];
	    });
	    sitemexit.on ('touchstart', function() {
	      game.popScene (Shop);
	        shoping = false;
	    });

	    Shop.addChild(shopcur);
	    Shop.addChild(sitemlist1);
	    Shop.addChild(sitemlist2);
	    Shop.addChild(sitemlist3);
	    Shop.addChild(sitemlist4);
	    Shop.addChild(sitemexit);
	    Shop.backgroundColor = 'rgba(0, 0, 0, 0.3)';
	    // 상점 끝

/** ***************************************************** */
// 인벤토리 시작
/** ***************************************************** */  
	    	    
        // 인벤토리 시작
    	var inventory = [1, 0, 0, 0, 0, 0, 0, 0];
	    var itemnum = 1 ;
	    var itemselect;
	    var itemslot;
	    var selling = false;  
	    
	    var Inven = new Scene (320, 320);
	    var invencur = new Sprite (300, 20);
	    invencur.moveTo (10, 5);
	    invencur.backgroundColor = 'black';

	    var itemlist1 = new Label ('');
	    itemlist1.color = 'white';
	    itemlist1.moveTo (10, 10);   
	    var itemlist2 = new Label ('');
	    itemlist2.color = 'white';
	    itemlist2.moveTo (10, 40);   
	    var itemlist3 = new Label ('');
	    itemlist3.color = 'white';
	    itemlist3.moveTo (10, 70);
	    var itemlist4 = new Label ('');
	    itemlist4.color = 'white';
	    itemlist4.moveTo (10, 100);   
	    var itemlist5 = new Label ('');
	    itemlist5.color = 'white';
	    itemlist5.moveTo (10, 130);   
	    var itemlist6 = new Label ('');
	    itemlist6.color = 'white';
	    itemlist6.moveTo (10, 160);   
	    var itemlist7 = new Label ('');
	    itemlist7.color = 'white';
	    itemlist7.moveTo (10, 190);   
	    var itemlist8 = new Label ('');
	    itemlist8.color = 'white';
	    itemlist8.moveTo (10, 220);   
	    var itemexit = new Label ('뒤로');
	    itemexit.color = 'white';
	    itemexit.moveTo (10, 250);

	    var itemtxtre = function () {
	    itemlist1.text = ' ' + item[inventory[0]].name + ' : ' + item[inventory[0]].text + '     ' + item[inventory[0]].price + 'G';
	    itemlist2.text = ' ' + item[inventory[1]].name + ' : ' + item[inventory[1]].text + '     ' + item[inventory[1]].price + 'G';
	    itemlist3.text = ' ' + item[inventory[2]].name + ' : ' + item[inventory[2]].text + '     ' + item[inventory[2]].price + 'G';
	    itemlist4.text = ' ' + item[inventory[3]].name + ' : ' + item[inventory[3]].text + '     ' + item[inventory[3]].price + 'G';
	    itemlist5.text = ' ' + item[inventory[4]].name + ' : ' + item[inventory[4]].text + '     ' + item[inventory[4]].price + 'G';
	    itemlist6.text = ' ' + item[inventory[5]].name + ' : ' + item[inventory[5]].text + '     ' + item[inventory[5]].price + 'G';
	    itemlist7.text = ' ' + item[inventory[6]].name + ' : ' + item[inventory[6]].text + '     ' + item[inventory[6]].price + 'G';
	    itemlist8.text = ' ' + item[inventory[7]].name + ' : ' + item[inventory[7]].text + '     ' + item[inventory[7]].price + 'G';
	    };

	    itemtxtre();

	    Inven.on ('enterframe', function() {
	     if (invencur.y < 230 && game.input.down) {
	       invencur.y += 30;
	       game.input.down = false;
	     } else if (invencur.y > 5 && game.input.up) {
	       invencur.y -= 30;
	       game.input.up = false;
	     }
	    });

	    Inven.on ('abuttondown', function() {
	     if (invencur.y == 5) {
	       game.popScene (Inven);
	       itemselect = inventory[0];
	       itemslot = 0;
	     } else if (invencur.y == 35) {
	       game.popScene (Inven);
	       itemselect = inventory[1];
	       itemslot = 1;
	     } else if (invencur.y == 65) {
	       game.popScene (Inven);
	       itemselect = inventory[2];
	       itemslot = 2;
	     } else if (invencur.y == 95) {
	       game.popScene (Inven);
	       itemslot = 3;
	       itemselect = inventory[3];
	     } else if (invencur.y == 125) {
	       game.popScene (Inven);
	       itemslot = 4;
	       itemselect = inventory[4];
	     } else if (invencur.y == 155) {
	       game.popScene (Inven);
	       itemselect = inventory[5];
	       itemslot = 5;
	     } else if (invencur.y == 185) {
	       game.popScene (Inven);
	       itemselect = inventory[6];
	       itemslot = 6;
	     } else if (invencur.y == 215) {
	       game.popScene (Inven);
	       itemselect = inventory[7];
	       itemslot = 7;
	     } else if (invencur.y == 245) {
	       game.popScene (Inven);
	       selling = false;
	       useitem = false;
	     }
	    });

	    itemlist1.on ('touchstart', function() {
	     game.popScene (Inven);
	     itemselect = inventory[0];
	     itemslot = 0;
	    });
	    itemlist2.on ('touchstart', function() {
	     game.popScene (Inven);
	     itemselect = inventory[1];
	     itemslot = 1;
	    });
	    itemlist3.on ('touchstart', function() {
	     game.popScene (Inven);
	     itemselect = inventory[2];
	     itemslot = 2;
	    });
	    itemlist4.on ('touchstart', function() {
	     game.popScenee (Inven);
	     itemselect = inventory[3];
	     itemslot = 3;
	    });
	    itemlist5.on ('touchstart', function() {
	     game.popScene (Inven);
	     itemselect = inventory[4];
	     itemslot = 4;
	    });
	    itemlist6.on ('touchstart', function() {
	     game.popScene (Inven);
	     itemselect = inventory[5];
	     itemslot = 5;
	    });
	    itemlist7.on ('touchstart', function() {
	     game.popScene (Inven);
	     itemselect = inventory[6];
	     itemslot = 6;
	    });
	    itemlist8.on ('touchstart', function() {
	     game.popScene (Inven);
	     itemselect = inventory[7];
	     itemslot = 7;
	    });
	    itemexit.on ('touchstart', function() {
	     game.popScene (Inven);
	     selling = false;
	     useitem = false;
	    });

	    Inven.addChild(invencur);
	    Inven.addChild(itemlist1);
	    Inven.addChild(itemlist2);
	    Inven.addChild(itemlist3);
	    Inven.addChild(itemlist4);
	    Inven.addChild(itemlist5);
	    Inven.addChild(itemlist6);
	    Inven.addChild(itemlist7);
	    Inven.addChild(itemlist8);
	    Inven.addChild(itemexit);
	    Inven.backgroundColor = 'rgba(0, 0, 0, 0.3)';
    	// 인벤토리 끝

	    
/** ***************************************************** */
// 스탯 설정 시작
/** ***************************************************** */  
	    
        // 플레이어 스탯
        playerName = "Ezreal"
        playerHp = 10
        playerMaxHp = 10
        playerMp = 10
        playerMaxMp = 10
        
        playerStr = 1 // 공격력
        playerDex = 1 // 민첩성
        playerDef = 1 // 물리방어
        
        playerExp = 0
        playerNextExp = 4
        playerLevel = 1
        playerMoney = 100
        
        shurimaEvent1 = 0;
        shurimaEvent2 = 0;
        shurimaEvent3 = 0;
        shurimaEvent4 = 0;
        shurimaEvent5 = 0;
        shurimaEvent6 = 0;
        
        // 몬스터 스탯 시작
        // [이름, 체력, 공격력, 경험치, 돈, 이미지파일, 이미지프레임, 덱스, 방어력, 레벨]
        var statusRedminion = ['Red Minion', 1, 1, 1, 10, 'img/redminion.png', 1, 1, 1, 1];
        var statusBlueminion = ['Blue Minion', 1, 1, 1, 10, 'img/blueminion.png', 1, 1, 1, 1];
        var statusTroll = ['Troll', 10, 10, 10, 50, 'img/chara6.png', 1, 1, 1, 5];
        var statusZombie = ['Zombie', 1, 1, 1, 10, 'img/chara6.png', 1, 1, 1, 1];
        // 몬스터 스탯 끝

        
/** ***************************************************** */
// 헬퍼 클래스
/** ***************************************************** */
     // 몬스터 추가시 참고사항
     // 1. 그룹 변수 내 shurimaWorldNpc.addChild(monsterBlueminion); 등록
     // 2. class Go 내부 shurimaWorldNpc.addChild(monsterBlueminion); 등록
        
     // 지역 코드, 몬스터 코드, NPC 코드, 헬프 클래스
        class Go {
        	  constructor() {
        	  }
        	  
        	  now(){
        		console.log("inside now location is = ", + locationCode);  
        	  }
        	  
        	  // 초기화
        	  shurima(){
        		  	locationCode = 100;
        	  }
        	  
        	  // 맵 갱신 (지역 이동 시)
        	  refreshMap(){
        		  map.loadData(mainLoadData);
        		  map.collisionData = (mainCollisionData);
        		  foregroundMap.loadData(mainForegroundMap);
        	  }
        	  
        	  // 슈리마 월드 갱신
        	  shurima(){
            	  game.rootScene.removeChild(shurimaUnder);
            	  game.rootScene.removeChild(shurimaTownNpc);
            	  game.rootScene.addChild(shurimaWorldNpc);
            	  shurimaWorldNpc.addChild(monsterRedminion);
            	  shurimaWorldNpc.addChild(monsterBlueminion);
            	  shurimaWorldNpc.addChild(dealerBuy);
            	  }
            	
        	  // 타곤산 1층 갱신
              shurimaunder(){
            	  game.rootScene.removeChild(shurimaWorldNpc);
            	  game.rootScene.addChild(shurimaUnder);
            	  shurimaUnder.addChild(monsterTroll);
            	  }
              
              // 슈리마 마을 갱신
              shurimatown(){
                  game.rootScene.removeChild(shurimaWorldNpc);
                  game.rootScene.addChild(shurimaTownNpc);
                  shurimaTownNpc.addChild(dealerShurimaBuy);
                  }
              
              // 몬스터 전투시 이미지 갱신
              changeMonsterImage(){
                      mon.image = game.assets[monster[5]];
                      mon.frame = monster[6];
                      monsterHp = monster[1];
                      monsterLevel = monster[9];
               	  }
              
              playBattleSound(){
            	  game.assets ['sound/ff1town.mp3'].stop(); 
                  game.assets ['sound/ff1battle.mp3'].play();
                  game.assets ['sound/ff1battle.mp3'].src.loop = true;
              }
              
              playBackgroundSound(){
            	  game.assets ['sound/ff1battle.mp3'].stop(); 
                  game.assets ['sound/ff1town.mp3'].play();
                  game.assets ['sound/ff1town.mp3'].src.loop = true;
              }
              
              playGameoverSound(){
            	  game.assets ['sound/ff1battle.mp3'].stop(); 
                  game.assets ['sound/ffover.mp3'].play();
              }

              // 정보 메세지 창
      	      say(script) {
      		     textBox.opacity = 0.7;
      		     textLabel.moveTo (veiwX + 20, veiwY + 20);
      		     textBox.moveTo (veiwX + 10, veiwY + 10);
      		     textLabel.text = script;
      		  };
      		  
      		  sayend() {
      		     textBox.opacity = 0;
      		     textLabel.text = '';
      		     Yes.text = '';
      		     No.text = '';
      		  };
        }
        
        var go = new Go();
        
	    var textBox = new Sprite(300, 140);
	    textBox.backgroundColor = 'black';
	    textBox.moveTo (10, 10);
	    textBox.opacity = 0;

	    var textLabel = new Label('');
	    textLabel.moveTo (20, 20);
	    textLabel.color = 'white';
        
	    // if (player.x == 104 && player.y == 64 && player.direction == 3 &&
		// locationCode==100) {
        // go.say('Mount Gargantuan');
        // }
        
/** ***************************************************** */
// 좌표 충돌 노트
/** ***************************************************** */
		// ((9*16)-8) * ((3+1)*16)
		// X = 최종 값에서 - 8
		// Y = 좌표값에 + 1
        
    	/*
		 * 지역 코드 슈리마 월드맵 = 100 슈리마 마을 = 101 슈리마 마을 지하 = 102 타곤산 1층 = 200
		 */

/** ***************************************************** */
// 슈리마 월드 생성 시작
/** ***************************************************** */
        
        // 타곤산 던전 9, 3
        // 타곤산 던전 안내판7, 4
        // 모그론 통행로 행인 24, 7
        // 모그론 통행로 안내판28, 6
        // 모그론 통행로 입구 26, 0 // 27, 0
        // 필드 오두막 31,22
        // 슈리마 마을 입구 17, 39 // 18, 39
        // 종합 표지판 18, 17
        // 필드 높은 언덕 9, 25
        // 폭풍평원 표지판 35,12
        // 폭풍평원 입구 39,13 //39, 14
        // 장벽 0, 17
        
        // 타콘산 출발 지점7, 14 // 8, 14
        // 타콘산 던전에서 -> 슈리마 입구 지점7, 15 // 8, 15

        // 슈리마 월드 지역 코드
        
        // 충돌 이벤트 좌표 설정 시작
        console.log('locationCode= '+locationCode);
        
        map.on ('enterframe', function() {

        // 타곤산 표지판
        if (player.x == 104 && player.y == 64 && player.direction == 3 && locationCode==100) {
        go.say('Mount Gargantuan');
        }
        
        // 모그론 입구 표지판
        if (player.x == 440 && player.y == 96 && player.direction == 3 && locationCode==100) {
        go.say('Mogron Street');
        }
        
        // 종합 표지판
        if (player.x == 280 && player.y == 272 && player.direction == 3 && locationCode==100) {
        go.say('West-North: Mount Gargantuan<br>West: The Great Barrier<br>North: Mogron Street<br>East: Tempest Flats<br>South: Shurima Town');
        }
        
        // 폭풍평원 표지판
        if (player.x == 552 && player.y == 192 && player.direction == 3 && locationCode==100) {
        go.say('Tempest Flats');
        }
        
        // 그래이트 베리어
        if (player.x == 24 && player.y == 272 && player.direction == 3 && locationCode==100) {
        go.say('The Great Barrier');
        }
        	
    	// 슈리마 매매상인 충돌 지점
        if (player.x == 376 && player.y == 112 && player.direction == 3 && locationCode==100) {
        	dealerWorldBuyfx();
        }
           
    	// 타곤산 던전으로 이동
        if (player.x == 136 && player.y == 32 && locationCode==100) {

        	// 지역코드 변경
        	locationCode = 200;
        	
        	// 지도
    	    mainLoadData = tagonLevel1;
        	mainCollisionData = tagonCollision1;
        	mainForegroundMap = tagonFore1;
        	go.refreshMap();

        	// 초기화
            // 타콘산 출발 지점7, 14 // 8, 14
            // 타콘산 -> 슈리마 입구 지점7, 15 // 8, 15
        	player.x = 112;
        	player.y = 224;
        	game.rootScene.removeChild(allGroup);
        	go.shurimaunder();
         }
        
    	// 슈리마 타운으로 이동
        // 슈리마 마을 입구 17, 39 // 18, 39
        if (player.x == 264 && player.y == 608 && locationCode==100) {

        	// 지역코드 변경
        	locationCode = 101;
        	
        	// 지도
    	    mainLoadData = shurimaMapTown;
        	mainCollisionData = shurimaTownColl;
        	mainForegroundMap = shurimaTownFore;
        	go.refreshMap();
        	
        	// 초기화
            // 타콘산 출발 지점7, 14 // 8, 14
            // 타콘산 -> 슈리마 입구 지점7, 15 // 8, 15
        	// x=264 y=0
        	player.x = 264;
        	player.y = 32;
        	game.rootScene.removeChild(allGroup);
        	go.shurimatown();
         }
     
        });
        // 충돌 끝
        
        // 슈리마 월드 NPC시작
        var monsterRedminion = new Sprite (32, 32);
        monsterRedminion.image = game.assets['img/redminion.png'];
        monsterRedminion.frame = 2;
        monsterRedminion.moveTo (240, 160);
        monsterRedminion.on ('enterframe', function() {
        	monsterRedminion.frame += 0.1;
        	monsterRedminion.frame %= 3;
        	monsterRedminion.tl.moveBy (32, 0, 48)
		                .moveBy (0, 32, 48)
		                .moveBy (-32, 0, 48)
		                .moveBy (0, -32, 48)
		                .loop();
        	if (player.intersect(monsterRedminion)){
        		   // game.rootScene.removeChild();
        		   go.playBattleSound();
        		   shurimaWorldNpc.removeChild(monsterRedminion);
        	       monster = statusRedminion;
        	       go.changeMonsterImage();
        	       massage.text = statusRedminion[0] + ' Attack!!';
        	       game.pushScene (Battle);
        	}
        	
        });
        
        var monsterBlueminion = new Sprite (32, 32);
        monsterBlueminion.image = game.assets['img/blueminion.png'];
        monsterBlueminion.frame = 2;
        monsterBlueminion.moveTo (140, 260);
        monsterBlueminion.on ('enterframe', function() {
        	monsterBlueminion.frame += 0.1;
        	monsterBlueminion.frame %= 3;
        	monsterBlueminion.tl.moveBy (32, 0, 48)
		                .moveBy (0, 32, 48)
		                .moveBy (-32, 0, 48)
		                .moveBy (0, -32, 48)
		                .loop();
        	if (player.intersect(monsterBlueminion)){
        		   // game.rootScene.removeChild();
        		   go.playBattleSound();
        		   shurimaWorldNpc.removeChild(monsterBlueminion);
        	       monster = statusBlueminion;
        	       go.changeMonsterImage();
        	       massage.text = statusBlueminion[0] + ' Attack!!';
        	       game.pushScene (Battle);
        	}
        	
        });
        // 몬스터 출현 끝

        // 상점 상인 위치 및 이벤트
        var dealerBuy = new Sprite (32, 32);
        dealerBuy.image = game.assets['img/chara0.png'];
        dealerBuy.frame = 4;
        dealerBuy.moveTo(376, 96)
        var dealerWorldBuyfx = function () {
         player.y += 4;
         console.log("shoping1= "+shoping);
         game.pushScene (Shop);
         shoping = true;
         console.log("shoping2= "+shoping);
         dealerBuy.on ('enterframe', function () {
          if (shoping) {
            go.say(item[itemselect].name + ' Buy?');
            yesorno();
            if (game.input.left) {
             if (playerMoney - item[itemselect].price >= 0 && itemnum < 8) {
               playerMoney -= item[itemselect].price;
               inventory[itemnum] = itemselect;
               itemnum += 1;
               itemtxtre();
               shoping = false;
               go.sayend();
              } else {
               go.say('Can not buy this');
              }
            } else if (game.input.up) {
             shoping = false;
            } else if (game.input.down) {
             shoping = false;
            } else if (game.input.right) {
             shoping = false;
            }
           }
         });
        }; 
        // 슈리마 마을 NPC끝
        
/** ***************************************************** */
// 타곤산 던전 1층
/** ***************************************************** */
        
    	/*
		 * 지역 코드 슈리마 월드맵 = 100 슈리마 마을 = 101 슈리마 마을 지하 = 102 타곤산 1층 = 200
		 */
        
        // 올라가기, 2,0
        // 타콘산 출발 지점7, 14 // 8, 14
        // 타콘산 -> 슈리마 입구 지점7, 15 // 8, 15
        
        var monsterTroll = new Sprite (32, 32);
        monsterTroll.image = game.assets['img/chara6.png'];
        monsterTroll.frame = 4;
        monsterTroll.moveTo (32, 80);
        monsterTroll.on ('enterframe', function() {
        	monsterTroll.frame += 0.1;
        	monsterTroll.frame %= 3;
        	monsterTroll.tl.moveBy (16, 0, 24)
			               .moveBy (0, 16, 24)
			               .moveBy (-16, 0, 24)
			               .moveBy (0, -16, 24)
			               .loop();
        	if (player.intersect(monsterTroll)){
        		   // game.rootScene.removeChild(shurimaUnder);
        		   go.playBattleSound();
        		   shurimaUnder.removeChild(monsterTroll);
        	       monster = statusTroll; // 전투 코드 전달
        	       go.changeMonsterImage();
        	       massage.text = statusTroll[0] + ' Attack!!';
        	       game.pushScene (Battle);
        	}
        });
        
    	// 슈리마 월드 나가기 7 15 / 8 15
        map.on ('enterframe', function() {
        if (player.x == 104 && player.y == 224  && locationCode==200) {

        	console.log("coll ok");
        	// 지역코드 변경
        	locationCode = 100;
	
    	    mainLoadData = shurimaWorldMap;
        	mainCollisionData = shurimaWorldColl;
        	mainForegroundMap = shurimaWorldFore;
        	go.refreshMap();

        	// 초기화
            // 타콘산 출발 지점7, 14 // 8, 14
            // 타콘산 -> 슈리마 입구 지점7, 15 // 8, 15
        	player.x = 136;
        	player.y = 48;
        	game.rootScene.removeChild(allGroup);
        	go.shurima();
         }
        });

/** ***************************************************** */
// 슈리마 마을
/** ***************************************************** */
        
    	/*
		 * 지역 코드 슈리마 월드맵 = 100 슈리마 마을 = 101 슈리마 마을 지하 = 102 타곤산 1층 = 200
		 */
        
        // 슈리마 월드맵 으로 17, 0 // 18, 0
        // 슈리마 월드맵 표지판 16, 3
        // 떠돌이 npc 19,9
        // 오아시스 윗 집 26, 8
        // 서쪽 집 4, 18
        // 동쪽 아래 집 35, 28
        // Urtistan 어티스탄 가는 길 0, 27 / 0, 28
        // 어거스탄 표지판, 2, 26
        // 피라미드 입구, 21 , 36
        // 슈리마 마을 중앙 입구 31, 39 / 32, 39
        // 피라미드 숨겨진 항아리/ 21, 26
        
        // 모그론 입구 표지판
        if (player.x == 440 && player.y == 96 && player.direction == 3) {
        go.say('Mogron Street');
        }
       
        // 슈리마 마을 상인
        var dealerShurimaBuy = new Sprite (32, 32);
        dealerShurimaBuy.image = game.assets['img/chara0.png'];
        dealerShurimaBuy.frame = 4;
        dealerShurimaBuy.moveTo(296, 128)
        var dealerBuyfx = function () {
         player.y += 4;
         game.pushScene (Shop);
         shoping = true;
         dealerShurimaBuy.on ('enterframe', function () {
          if (shoping) {
            go.say(item[itemselect].name + ' Buy?');
            yesorno();
            if (game.input.left) {
             if (playerMoney - item[itemselect].price >= 0 && itemnum < 8) {
               playerMoney -= item[itemselect].price;
               inventory[itemnum] = itemselect;
               itemnum += 1;
               itemtxtre();
               shoping = false;
               go.sayend();
              } else {
               go.say('Can not buy this');
              }
            } else if (game.input.up) {
             shoping = false;
            } else if (game.input.down) {
             shoping = false;
            } else if (game.input.right) {
             shoping = false;
            }
           }
         });
        };        
        
        // 슈리마 월드 나가기 7 15 / 8 15
        map.on ('enterframe', function() {
            if (player.x == 264 && player.y == 0 && locationCode==101) {

            	console.log("coll ok");
            	// 지역코드 변경
            	locationCode = 100;
    	
        	    mainLoadData = shurimaWorldMap;
            	mainCollisionData = shurimaWorldColl;
            	mainForegroundMap = shurimaWorldFore;
            	go.refreshMap();
            	
            	// 초기화
                // 타콘산 출발 지점7, 14 // 8, 14
                // 타콘산 -> 슈리마 입구 지점7, 15 // 8, 15
            	// 264 && 608
            	player.x = 264;
            	player.y = 576;
            	game.rootScene.removeChild(shurimaTownNpc);
            	go.shurima();
             }
            });
        
/** ***************************************************** */
// 전투코드 시작
/** ***************************************************** */

        var playerAttackRating;
        var monsterAttackRating;
        var monster = statusRedminion;
        
        var massage = new Label ('');
        massage.color = 'white';
        massage.moveTo (10, 10);

        var Battle = new Scene (320, 320);
        
        var BattleMenuCursor = new Sprite(300, 20);
        BattleMenuCursor.backgroundColor = 'black';
        BattleMenuCursor.moveTo (10, 175);
         
        var mon = new Sprite (32, 32);
        mon.image = game.assets[monster[5]];
        mon.frame = monster[6];
        mon.moveTo (150, 100);
        mon.scale (2, 2);

        var Battleattack = new Label ('Attack');
        Battleattack.color = 'white';
        Battleattack.moveTo (10, 180);
        var Battlemagic = new Label ('Skill');
        Battlemagic.color = 'white';
        Battlemagic.moveTo (10, 210);
        var Battleesc = new Label ('Run');
        Battleesc.color = 'white';
        Battleesc.moveTo (10, 240);
          
        var monsterHp = monster[1];
        var monsterLevel = monster[9];
        console.log('monster = '+monster);
        
        Battle.on ('enterframe', function() {
           if (BattleMenuCursor.y < 235 && game.input.down) {
             BattleMenuCursor.y += 30;
             game.input.down = false;
           } else if (BattleMenuCursor.y > 175 && game.input.up) {
             BattleMenuCursor.y -= 30;
             game.input.up = false;
           }
          });

        // 키보드 조작 설정
        Battle.on ('abuttondown', function() {
            
           if (BattleMenuCursor.y == 175) {
        	   // console.log('monsterHp = '+monsterHp);
        	   // 공격 명중률 설정(랜덤숫자 + 민첩성)
        	   playerAttackRating = Math.floor(Math.random() * 100) + playerDex;
               monsterAttackRating = Math.floor(Math.random() * 100);
               console.log(playerAttackRating);
               console.log(monsterAttackRating);
               
               // 플레이어가 적 명중
               if (playerAttackRating >= monsterAttackRating) {
                 massage.text = 'Hit ' + monster[0] + ' ' + playerStr + 'Damage';
                 game.assets['sound/punch1.wav'].play();
                 monsterHp -= playerStr;
                 mon.tl.scaleBy (0.5, 5)
                       .scaleBy (2, 5);
                 
               // 몬스터가 플레이어 명중
               } else {
                 massage.text = 'Counter ' + monster[0] + ' ' + monster[2] + 'Damage';
                 game.assets['sound/punch1.wav'].play();
                 playerHp -= monster[2];
                 Battle.tl.moveBy (0, -40, 5)
                          .moveBy (0, 40, 5);
               }
           } else if (BattleMenuCursor.y == 205) {
              if (inventory.indexOf(3) == -1) {
                massage.text = 'You have no Skill';
              } else if (playerMp <= 0) {
                massage.text = 'No MP';
              } else {
                massage.text = 'Fire ball 5 Damage';
                monsterHp -= 5;
                playerMp -= 2;
              }
           } else if (BattleMenuCursor.y == 235) {
             
        	   // 도망 가기, 랜덤숫자 +레벨 = 높으면 이김. 지면 데미지.
        	   var a = Math.floor(Math.random() * 100) + playerLevel;
               var b = Math.floor(Math.random() * 100) + monsterLevel;
               if (a > b) { game.popScene (Battle); }
               else { massage.text = 'You can not run!! - HP!! '; playerHp -= monster[2]; game.assets['sound/punch1.wav'].play(); };
        	   
           }
         });
        
        // 터치 조작 설정
        Battleattack.on ('touchstart', function() {
               playerAttackRating = Math.floor(Math.random() * 100) + playerDex;
               monsterAttackRating = Math.floor(Math.random() * 100);
               console.log(playerAttackRating);
               console.log(monsterAttackRating);
               if (playerAttackRating >= monsterAttackRating) {
                 massage.text = 'Hit ' + monster[0] + ' ' + playerStr + 'Damage';
                 game.assets['sound/punch1.wav'].play();
                 monsterHp -= playerStr;
                 mon.tl.scaleBy (0.5, 5)
                       .scaleBy (2, 5);                  
               } else {
                 massage.text = 'Counter ' + monster[0] + ' ' + monster[2] + 'Damage';
                 game.assets['sound/punch1.wav'].play();
                 playerHp -= monster[2];
                 Battle.tl.moveBy (0, -40, 5)
                        .moveBy (0, 40, 5);
               }
         });
        
        Battlemagic.on ('touchstart', function() {
            if (inventory.indexOf(3) == -1) {
                massage.text = 'You have no Skill';
              } else if (playerMp <= 0) {
                massage.text = 'No MP';
              } else {
                massage.text = 'Fire ball 5 Damage';
                monsterHp -= 5;
                playerMp -= 2;
              }
         });
        Battleesc.on ('touchstart', function() {
        		// 도망 가기, 랜덤숫자 +레벨 = 높으면 이김. 지면 데미지.
        		var a = Math.floor(Math.random() * 100) + playerLevel;
        		var b = Math.floor(Math.random() * 100) + monsterLevel;
        		if (a > b) { game.popScene (Battle); }
        		else { massage.text = 'You can not run!! - HP!! '; playerHp -= monster[2]; game.assets['sound/punch1.wav'].play(); };
         });

        // 전투 종료 업데이트 및 메세지
        Battle.on ('enterframe', function() {
          if (monsterHp <= 0) {
            playerExp += monster[3];
            playerMoney += monster[4];
            monsterHp = monster[1];
            game.assets['sound/dqfinish.mp3'].play();
            go.say(monster[0] + ' is dead <br>' + monster[4] + ' + Gold <br>' + monster[3] + ' + Exp');
            game.popScene (Battle);
            go.playBackgroundSound();
          }
          if (playerHp <= 0) {
            go.say('Defeat. Game Over!');
            go.playGameoverSound();
            game.popScene (Battle);
            setTimeout(2000); // 버그 검토하기.
            location.reload();
          }
         });
        
        Battle.addChild(mon);
        Battle.addChild(BattleMenuCursor);
        Battle.addChild(Battleattack);
        Battle.addChild(Battlemagic);
        Battle.addChild(Battleesc);
        Battle.addChild(massage);
        Battle.backgroundColor = 'rgba(0, 0, 0, 0.3)';

/** ***************************************************** */
// 생성 시작
/** ***************************************************** */
   
    	/*
		 * 지역 코드 슈리마 월드맵 = 100 슈리마 마을 = 101 슈리마 마을 지하 = 102 타곤산 1층 = 200
		 */
        
	    // 슈리마 월드맵
	    var shurimaWorldNpc = new Group();
	    shurimaWorldNpc.addChild(dealerBuy);
	    shurimaWorldNpc.addChild(monsterRedminion);
	    shurimaWorldNpc.addChild(monsterBlueminion);
		  
		// 타곤산 1층
		var shurimaUnder = new Group();
		shurimaUnder.addChild(monsterTroll);
		
		// 슈리마 마을
		var shurimaTownNpc = new Group();
		shurimaTownNpc.addChild(dealerShurimaBuy);
		  
		// 모든 변수 그룹
	  	var allGroup = new Group();
	  	allGroup.addChild(shurimaWorldNpc);
	  	allGroup.addChild(shurimaUnder);
	  	allGroup.addChild(shurimaTownNpc);
	     
        var stage = new Group();
        stage.addChild(map);
        stage.addChild(player);
        stage.addChild(textBox);
        stage.addChild(textLabel);
        stage.addChild(Yes);
        stage.addChild(No);
        stage.addChild(foregroundMap);
        game.rootScene.addChild(stage);
        
        go.shurima(); // 첫 시작 장소 셋팅

        var pad = new Pad();
        pad.x = 0;
        pad.y = 220;
        game.rootScene.addChild(pad);

        // 이동시 몬스터가 캐릭터와 멀어지지 않게 한다.
        game.rootScene.addEventListener('enterframe', function(e) {
            var x = Math.min((game.width  - 16) / 2 - player.x, 0);
            var y = Math.min((game.height - 16) / 2 - player.y, 0);
            x = Math.max(game.width,  x + map.width)  - map.width;
            y = Math.max(game.height, y + map.height) - map.height;
            stage.x = x;
            stage.y = y;
            shurimaWorldNpc.x = x;
            shurimaWorldNpc.y = y;
            shurimaUnder.x = x;
            shurimaUnder.y = y;
            shurimaTownNpc.x = x;
            shurimaTownNpc.y = y;
        });
    };
    game.start();
};